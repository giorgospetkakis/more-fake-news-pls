{"py/object": "data.Author", "author_id": "aqdpi64il7z7prcq26a81l1sfznd3on2", "truth": 0, "tweets": ["Who needs best-by labels when your package is sensing the food inside it? #URL#", "How this Danish energy company is transitioning from oil and gas to all renewables #URL#", "How Bernie Sanders plans to revive the New Deal\u2014governing by mobilization #URL#", "This portable personal cleaning device mimics a cat\u2019s tongue #URL#", "The North Face is sending its designers back to school. #URL#", "Reproductive health is a business issue #URL#", "These bacteria-sniffing dogs are protecting your orange juice from a global citrus pandemic #URL#", "This biodegradable bioplastic sucks carbon from the air #URL#", "This city has a plan to stop homelessness by the end of the year #URL#", "Creating new parks in cities can be slow, expensive, and time-consuming. This new system can help. #URL#", "7 ways that supermarkets can help eliminate single-use plastic #URL#", "How this Danish energy company is transitioning from oil and gas to all renewables #URL#", "Fruit scraps and ugly pieces of produce are finding second lives. #URL#", "How to unleash creativity on the world\u2019s biggest problems, from Alphabet\u2019s moonshot division #URL#", "These carbon offsets counter your emissions while helping rain forest workers access healthcare #URL#", "If Uber and Lyft got ahead of EV mandates, they could become the sustainable leaders they so often claim to be. #URL#", "\"This is not a new technology. I like to say it's 500 to 700 million years old.\" #URL#", "By 2050, the U.S. will lose $83 billion a year because of all the nature we\u2019ve destroyed #URL#", "The North Face\u2019s latest quest? Clothes that last forever #URL#", "This startup wants to replace traditional package delivery with hyperlocal, electric-trike-driving couriers #URL#", "Eating honey is more complicated than you might think #URL#", "The North Face\u2019s latest quest? Clothes that last forever #URL#", "Uber and Lyft should electrify their fleets\u2014before cities make them do it anyway #URL#", "RT #USER#: Congrats to #USER#, a winner of our 2019 Environmental Journalism Award. #URL# #HASHTAG# https:/\u2026", "These DARPA-funded bricks can self-repair\u2014and replicate #URL#", "The Body Shop will start hiring the first person who applies for any retail job #URL#", "Check out the Australian shopping center that\u2019s touted as the most sustainable in the world #URL#", "Progressive politicians\u2019 push for climate action is making Republicans rethink their denial #URL#", "It\u2019s time to regulate fashion the way we regulate the oil industry #URL#", "The simple design change that could help doctors prevent opioid addiction #URL#", "Where in the U.S. is the rent too damn high? Everywhere #URL#", "This nonprofit turns vacant storefronts into pop-up communal spaces #URL#", "Warming is going to push farming North, releasing huge swaths of carbon stored in the soil #URL#", "This electric motorcycle startup is transforming the Rwandan taxi industry #URL#", "The box for this toy doesn\u2019t get thrown out\u2014it\u2019s part of the toy #URL#", "Even business-to-business companies benefit from having a purpose #URL#", "Giant brands love Loop\u2019s zero-waste packaging\u2014and now it\u2019s coming to a store near you #URL#", "This new organization wants to help cities create a broader idea of what resilience means #URL#", "How maps tracking climate disasters fall short\u2014and endanger lives #URL#", "In this new Dutch neighborhood, there will be 1 shared car for every 3 households #URL#", "By 2025, \u00d8rsted plans to be the first carbon neutral utility. #URL#", "Could this gorgeous electric plane be the Tesla of the skies? #URL#", "This just-add-water hand wash lets you stop using so many plastic bottles #URL#", "This new sugar substitute is made from food waste #URL#", "Get used to the look of Amazon\u2019s new electric delivery van, because they\u2019re making 100,000 of them #URL#", "This electric motorcycle startup is transforming the Rwandan taxi industry #URL#", "\u201cPeople have opinions about the way it looks\u2014I\u2019ll leave it at that.\" #URL#", "This compostable packaging can tell you when your food is going bad #URL#", "We\u2019re on track to hit 1.5\u00b0C of warming in 2040. Here\u2019s how it will change our work lives #URL#", "Food delivery workers in L.A. spend more to make a delivery than anywhere else #URL#", "Progressive politicians\u2019 push for climate action is making Republicans rethink their denial #URL#", "Uber and Lyft should electrify their fleets\u2014before cities make them do it anyway #URL#", "California considers tax on companies with large pay gaps between CEOs and their workers #URL#", "What will it take for the 75% of companies that don\u2019t have climate commitments to step up? #URL#", "Imagining a world of sustainable, regenerative brands #URL#", "The fabric, called Circulose, is a new innovation that lets old fabrics be turned into new thread. #URL#", "This robot trash bin automatically sorts your recyclables for you #URL#", "Scientists analyzed 1,700 cities and determined how to design safe streets #URL#", "If bacteria don\u2019t kill you the old-fashioned way, they\u2019ll just kill you with climate change instead #URL#", "This bacon looks like the real thing as it sizzles\u2014but it\u2019s made from fungus #URL#", "Even looking at flood maps can\u2019t convince coastal residents their homes will be underwater #URL#", "Get used to the look of Amazon\u2019s new electric delivery van, because they\u2019re making 100,000 of them #URL#", "Can food banks put an end to hunger if their biggest donors are the cause of the hunger? #URL#", "Bill and Melinda Gates have given away $53.8 billion (so far): Here\u2019s what they\u2019ve learned #URL#", "This graph will show you the carbon footprint of your protein #URL#", "Worker buy-in is the real key for successful corporate sustainability #URL#", "What happens when all the tiny satellites we\u2019re shooting into space get hacked? #URL#", "How maps tracking climate disasters fall short\u2014and endanger lives #URL#", "\u2018Park in a Truck\u2019 is like Ikea but for building neighborhood parks #URL#", "\"Even your tofu shipped to you across the world and wrapped in plastic will have a lower footprint than meat.\u201d #URL#", "Scientists analyzed 1,700 cities and determined how to design safe streets #URL#", "23% of the Fortune 500 have made a real climate commitment. #URL#", "This startup wants to replace traditional package delivery with hyperlocal, electric-trike-driving couriers #URL#", "Boston University is building the city\u2019s largest carbon-neutral, fossil fuel-free building #URL#", "How maps tracking climate disasters fall short\u2014and endanger lives #URL#", "The box for this toy doesn\u2019t get thrown out\u2014it\u2019s part of the toy #URL#", "Most Democratic candidates talk about reining in Wall Street, but they\u2019re short on specifics #URL#", "In this new Dutch neighborhood, there will be 1 shared car for every 3 households #URL#", "Reproductive health is a business issue #URL#", "This new magical coating saves water by making toilets so slippery that poop basically flushes itself #URL#", "Giant brands love Loop\u2019s zero-waste packaging\u2014and now it\u2019s coming to a store near you #URL#", "This new H&amp;M dress is made from wood and recycled jeans #URL#", "Boston University is building the city\u2019s largest carbon-neutral, fossil fuel-free building #URL#", "How this Danish energy company is transitioning from oil and gas to all renewables #URL#", "We use a lot of natural processes\u2014bees to pollinate, rivers to irrigate crops. When they\u2019re gone, it\u2019s going to get\u2026 #URL#", "Even business-to-business companies benefit from having a purpose #URL#", "There are way more people struggling with poverty in New York than we think #URL#", "While not as strong as concrete, the bricks could reduce the CO2 footprint of a building, self-heal, and even repro\u2026 #URL#", "This new sugar substitute is made from food waste #URL#", "Bill and Melinda Gates have given away $53.8 billion (so far): Here\u2019s what they\u2019ve learned #URL#", "The Body Shop will start hiring the first person who applies for any retail job #URL#", "Even business-to-business companies benefit from having a purpose #URL#", "Progressive politicians\u2019 push for climate action is making Republicans rethink their denial #URL#", "What will it take for the 75% of companies that don\u2019t have climate commitments to step up? #URL#", "This biodegradable bioplastic sucks carbon from the air #URL#", "Want to know if your clothes are ethically sourced? Theory\u2019s new labeling system is for you #URL#", "How UNICEF redesigned its tents to be ready for a changing world #URL#", "This biodegradable bioplastic sucks carbon from the air #URL#", "Why just have a box when you can have a launch tower for a rocket? #URL#", "This new H&amp;M dress is made from wood and recycled jeans #URL#"], "ents": [[], [["Danish", "NORP"]], [["Bernie Sanders", "PERSON"]], [], [["The North Face", "ORG"]], [], [], [], [["the end of the year", "DATE"]], [], [["7", "CARDINAL"]], [["Danish", "NORP"]], [["second", "ORDINAL"]], [["Alphabet", "ORG"], ["moonshot", "ORG"]], [], [["Uber", "PERSON"], ["Lyft", "PERSON"], ["EV", "ORG"]], [["500 to 700 million", "MONEY"]], [["2050", "DATE"], ["U.S.", "GPE"], ["$83 billion", "MONEY"]], [["The North Face", "ORG"]], [], [], [["The North Face", "ORG"]], [["Lyft", "PERSON"]], [["2019", "DATE"], ["Environmental Journalism Award", "EVENT"]], [["DARPA", "ORG"]], [["The Body Shop", "ORG"], ["first", "ORDINAL"]], [["Australian", "NORP"]], [["Republicans", "NORP"]], [], [], [["U.S.", "GPE"]], [], [], [["Rwandan", "NORP"]], [], [], [["Loop", "ORG"], ["zero", "CARDINAL"]], [], [], [["Dutch", "NORP"], ["1", "CARDINAL"], ["3", "CARDINAL"]], [["2025", "DATE"], ["\u00d8rsted", "ORG"], ["first", "ORDINAL"]], [["Tesla", "ORG"]], [], [], [["Amazon", "ORG"], ["100,000", "CARDINAL"]], [["Rwandan", "NORP"]], [], [], [["1.5\u00b0", "QUANTITY"], ["2040", "DATE"]], [["L.A.", "GPE"]], [["Republicans", "NORP"]], [["Lyft", "PERSON"]], [["California", "GPE"]], [["the 75%", "PERCENT"]], [], [["Circulose", "PERSON"]], [], [["1,700", "CARDINAL"]], [], [], [], [["Amazon", "ORG"], ["100,000", "CARDINAL"]], [], [["Bill", "PERSON"], ["Melinda Gates", "PERSON"], ["$53.8 billion", "MONEY"]], [], [], [], [], [["Park", "PERSON"], ["Truck", "ORG"], ["Ikea", "ORG"]], [], [["1,700", "CARDINAL"]], [["23%", "PERCENT"]], [], [["Boston University", "ORG"]], [], [], [["Democratic", "NORP"]], [["Dutch", "NORP"], ["1", "CARDINAL"], ["3", "CARDINAL"]], [], [], [["Loop", "ORG"], ["zero", "CARDINAL"]], [], [["Boston University", "ORG"]], [["Danish", "NORP"]], [], [], [["New York", "GPE"]], [], [], [["Bill", "PERSON"], ["Melinda Gates", "PERSON"], ["$53.8 billion", "MONEY"]], [["The Body Shop", "ORG"], ["first", "ORDINAL"]], [], [["Republicans", "NORP"]], [["the 75%", "PERCENT"]], [], [], [["UNICEF", "ORG"]], [], [], []], "POS_tags": [[{"py/object": "builtins.generator", "py/iterator": ["PRON", "VERB", "ADV", "PUNCT", "ADP", "NOUN", "ADV", "DET", "NOUN", "AUX", "VERB", "DET", "NOUN", "ADP", "PRON", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "DET", "ADJ", "NOUN", "NOUN", "AUX", "VERB", "ADP", "NOUN", "CCONJ", "NOUN", "ADP", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PROPN", "PROPN", "VERB", "PART", "VERB", "DET", "PROPN", "PROPN", "PUNCT", "VERB", "ADP", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "ADJ", "NOUN", "NOUN", "VERB", "DET", "NOUN", "PART", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "PROPN", "PROPN", "AUX", "VERB", "DET", "NOUN", "ADV", "ADP", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "AUX", "DET", "NOUN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "PUNCT", "VERB", "NOUN", "AUX", "VERB", "DET", "NOUN", "NOUN", "ADP", "DET", "ADJ", "NOUN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "ADJ", "VERB", "NOUN", "ADP", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "AUX", "DET", "NOUN", "PART", "VERB", "NOUN", "ADP", "DET", "NOUN", "ADP", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "ADJ", "NOUN", "ADP", "NOUN", "VERB", "AUX", "ADJ", "PUNCT", "ADJ", "PUNCT", "CCONJ", "NOUN", "PUNCT", "VERB", "PUNCT", "DET", "ADJ", "NOUN", "VERB", "VERB", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NUM", "NOUN", "DET", "NOUN", "VERB", "VERB", "VERB", "ADJ", "PUNCT", "NOUN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "DET", "ADJ", "NOUN", "NOUN", "AUX", "VERB", "ADP", "NOUN", "CCONJ", "NOUN", "ADP", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NOUN", "CCONJ", "ADJ", "NOUN", "ADP", "NOUN", "AUX", "VERB", "ADJ", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PART", "VERB", "NOUN", "ADP", "DET", "NOUN", "PART", "ADJ", "NOUN", "PUNCT", "ADP", "PROPN", "PART", "PROPN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "NOUN", "VERB", "DET", "NOUN", "SCONJ", "VERB", "NOUN", "PROPN", "NOUN", "VERB", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["SCONJ", "PROPN", "CCONJ", "PROPN", "VERB", "ADV", "ADP", "PROPN", "NOUN", "PUNCT", "PRON", "VERB", "VERB", "DET", "ADJ", "NOUN", "PRON", "ADV", "ADV", "VERB", "PART", "AUX", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PUNCT", "DET", "AUX", "PART", "DET", "ADJ", "NOUN", "PUNCT", "PRON", "VERB", "PART", "VERB", "PRON", "AUX", "NUM", "PART", "NUM", "NUM", "NOUN", "ADJ", "PUNCT", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADP", "NUM", "PUNCT", "DET", "PROPN", "VERB", "VERB", "SYM", "NUM", "NUM", "DET", "NOUN", "SCONJ", "ADP", "DET", "DET", "NOUN", "PRON", "VERB", "VERB"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "PROPN", "PROPN", "PART", "ADJ", "NOUN", "PUNCT", "NOUN", "DET", "VERB", "ADV"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "VERB", "PART", "VERB", "ADJ", "NOUN", "NOUN", "ADP", "ADJ", "PUNCT", "ADJ", "PUNCT", "NOUN", "PUNCT", "VERB", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "NOUN", "AUX", "ADV", "ADJ", "SCONJ", "PRON", "VERB", "VERB"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "PROPN", "PROPN", "PART", "ADJ", "NOUN", "PUNCT", "NOUN", "DET", "VERB", "ADV"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "CCONJ", "PROPN", "VERB", "VERB", "DET", "NOUN", "PUNCT", "ADP", "NOUN", "VERB", "PRON", "AUX", "PRON", "ADV"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "PROPN", "PUNCT", "NOUN", "ADP", "NOUN", "PUNCT", "DET", "NOUN", "ADP", "DET", "NUM", "PROPN", "PROPN", "PROPN", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "PROPN", "PUNCT", "VERB", "NOUN", "VERB", "NOUN", "PUNCT", "VERB", "PUNCT", "CCONJ", "VERB"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "PROPN", "PROPN", "VERB", "VERB", "VERB", "DET", "ADJ", "NOUN", "PRON", "VERB", "ADP", "DET", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "ADP", "DET", "ADJ", "NOUN", "NOUN", "DET", "VERB", "ADJ", "SCONJ", "DET", "ADV", "ADJ", "ADP", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "PART", "VERB", "ADP", "NOUN", "NOUN", "AUX", "VERB", "PROPN", "VERB", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "VERB", "NOUN", "PART", "VERB", "NOUN", "DET", "NOUN", "PRON", "VERB", "DET", "NOUN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "NOUN", "NOUN", "DET", "VERB", "VERB", "NOUN", "VERB", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "ADP", "DET", "PROPN", "AUX", "DET", "NOUN", "ADV", "ADV", "ADJ", "PUNCT", "ADV"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "VERB", "ADJ", "NOUN", "ADP", "NOUN", "PUNCT", "ADP", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "AUX", "VERB", "PART", "VERB", "NOUN", "PROPN", "PUNCT", "VERB", "ADJ", "NOUN", "ADP", "NOUN", "VERB", "ADP", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "NOUN", "NOUN", "AUX", "VERB", "DET", "ADJ", "NOUN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "ADP", "DET", "NOUN", "AUX", "PART", "AUX", "VERB", "ADP", "PUNCT", "PRON", "VERB", "NOUN", "ADP", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "NOUN", "PUNCT", "ADP", "PUNCT", "NOUN", "NOUN", "VERB", "ADP", "VERB", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "VERB", "PROPN", "PART", "NUM", "PUNCT", "NOUN", "NOUN", "PUNCT", "CCONJ", "ADV", "PRON", "VERB", "VERB", "ADP", "DET", "NOUN", "SCONJ", "PRON"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "NOUN", "VERB", "PART", "VERB", "NOUN", "VERB", "DET", "ADJ", "NOUN", "ADP", "PRON", "NOUN", "VERB"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "VERB", "VERB", "NOUN", "NOUN", "VERB", "ADJ", "PUNCT", "CCONJ", "VERB", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADP", "DET", "ADJ", "ADJ", "NOUN", "PUNCT", "PRON", "VERB", "AUX", "NUM", "VERB", "NOUN", "ADP", "DET", "NUM", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADP", "NUM", "PUNCT", "PROPN", "VERB", "PART", "AUX", "DET", "ADJ", "NOUN", "ADJ", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "DET", "ADJ", "ADJ", "NOUN", "AUX", "DET", "NOUN", "ADP", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADV", "PUNCT", "VERB", "PUNCT", "NOUN", "NOUN", "NOUN", "VERB", "PRON", "VERB", "VERB", "ADV", "ADJ", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "NOUN", "NOUN", "AUX", "VERB", "ADP", "NOUN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["AUX", "ADJ", "ADP", "DET", "NOUN", "ADP", "PROPN", "PART", "ADJ", "ADJ", "NOUN", "NOUN", "PUNCT", "SCONJ", "PRON", "VERB", "VERB", "NUM", "ADP", "PRON"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "NOUN", "NOUN", "AUX", "VERB", "DET", "ADJ", "NOUN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PUNCT", "NOUN", "AUX", "NOUN", "ADP", "DET", "NOUN", "PRON", "VERB", "PUNCT", "PUNCT", "VERB", "PRON", "ADP", "DET", "PUNCT", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "NOUN", "VERB", "VERB", "PRON", "ADV", "DET", "NOUN", "AUX", "VERB", "ADJ"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "VERB", "ADP", "NOUN", "PART", "VERB", "NUM", "NOUN", "NOUN", "ADP", "VERB", "ADP", "NUM", "PUNCT", "ADV", "VERB", "ADV", "PRON", "VERB", "VERB", "DET", "NOUN", "VERB"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NOUN", "NOUN", "ADP", "PROPN", "VERB", "ADJ", "PART", "VERB", "DET", "NOUN", "SCONJ", "ADV", "ADV"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "PART", "VERB", "ADP", "NOUN", "NOUN", "AUX", "VERB", "PROPN", "VERB", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "CCONJ", "PROPN", "VERB", "VERB", "DET", "NOUN", "PUNCT", "ADP", "NOUN", "VERB", "PRON", "AUX", "PRON", "ADV"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "NOUN", "ADP", "NOUN", "ADP", "ADJ", "NOUN", "NOUN", "ADP", "NOUN", "CCONJ", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "VERB", "PRON", "VERB", "ADP", "DET", "NUM", "NOUN", "ADP", "NOUN", "DET", "AUX", "PART", "AUX", "NOUN", "NOUN", "PART", "VERB", "ADP", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "DET", "NOUN", "ADP", "ADJ", "PUNCT", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "PUNCT", "VERB", "PROPN", "PUNCT", "AUX", "DET", "ADJ", "NOUN", "DET", "VERB", "ADJ", "NOUN", "AUX", "VERB", "ADP", "ADJ", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "NOUN", "NOUN", "ADV", "VERB", "DET", "NOUN", "ADP", "PRON"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "VERB", "NUM", "NOUN", "CCONJ", "VERB", "ADV", "PART", "VERB", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["SCONJ", "NOUN", "AUX", "PART", "VERB", "PRON", "DET", "ADJ", "PUNCT", "ADJ", "NOUN", "PUNCT", "PRON", "VERB", "ADV", "VERB", "PRON", "ADP", "NOUN", "NOUN", "ADV"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "VERB", "SCONJ", "DET", "ADJ", "NOUN", "SCONJ", "PRON", "VERB", "PUNCT", "CCONJ", "PRON", "VERB", "VERB", "ADP", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "VERB", "ADP", "NOUN", "NOUN", "VERB", "PART", "VERB", "ADJ", "NOUN", "DET", "NOUN", "VERB", "AUX", "ADJ"]}], [{"py/object": "builtins.generator", "py/iterator": ["AUX", "ADJ", "ADP", "DET", "NOUN", "ADP", "PROPN", "PART", "ADJ", "ADJ", "NOUN", "NOUN", "PUNCT", "SCONJ", "PRON", "VERB", "VERB", "NUM", "ADP", "PRON"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "NOUN", "NOUN", "VERB", "DET", "NOUN", "ADP", "NOUN", "SCONJ", "DET", "ADJ", "NOUN", "AUX", "DET", "NOUN", "ADP", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "CCONJ", "PROPN", "PROPN", "AUX", "VERB", "ADV", "SYM", "NUM", "NUM", "PUNCT", "ADV", "ADV", "PUNCT", "PUNCT", "ADV", "VERB", "PRON", "PRON", "VERB", "VERB"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "VERB", "VERB", "PRON", "DET", "NOUN", "NOUN", "ADP", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NOUN", "PUNCT", "NOUN", "AUX", "DET", "ADJ", "NOUN", "ADP", "ADJ", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "VERB", "ADV", "DET", "DET", "ADJ", "NOUN", "PRON", "VERB", "VERB", "ADP", "NOUN", "VERB", "VERB", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "VERB", "VERB", "NOUN", "NOUN", "VERB", "ADJ", "PUNCT", "CCONJ", "VERB", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PUNCT", "VERB", "ADP", "DET", "NOUN", "PUNCT", "AUX", "SCONJ", "PROPN", "CCONJ", "ADP", "VERB", "NOUN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PUNCT", "ADV", "DET", "NOUN", "VERB", "ADP", "PRON", "ADP", "DET", "NOUN", "CCONJ", "VERB", "ADP", "NOUN", "VERB", "AUX", "DET", "ADJ", "NOUN", "SCONJ", "NOUN", "PUNCT", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "VERB", "NUM", "NOUN", "CCONJ", "VERB", "ADV", "PART", "VERB", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["NUM", "NOUN", "ADP", "DET", "PROPN", "NUM", "AUX", "VERB", "DET", "ADJ", "NOUN", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "VERB", "PART", "VERB", "ADJ", "NOUN", "NOUN", "ADP", "ADJ", "PUNCT", "ADJ", "PUNCT", "NOUN", "PUNCT", "VERB", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "AUX", "VERB", "DET", "NOUN", "PART", "ADJ", "NOUN", "PUNCT", "ADJ", "PUNCT", "ADJ", "NOUN", "PUNCT", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "VERB", "VERB", "NOUN", "NOUN", "VERB", "ADJ", "PUNCT", "CCONJ", "VERB", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "ADP", "DET", "NOUN", "AUX", "PART", "AUX", "VERB", "ADP", "PUNCT", "PRON", "VERB", "NOUN", "ADP", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "ADJ", "NOUN", "VERB", "ADP", "NOUN", "ADP", "PROPN", "PROPN", "PUNCT", "CCONJ", "PRON", "VERB", "ADJ", "ADP", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADP", "DET", "ADJ", "ADJ", "NOUN", "PUNCT", "PRON", "VERB", "AUX", "NUM", "VERB", "NOUN", "ADP", "DET", "NUM", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "AUX", "DET", "NOUN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "ADJ", "NOUN", "VERB", "NOUN", "ADP", "VERB", "NOUN", "ADV", "ADJ", "DET", "NOUN", "ADV", "VERB", "PRON"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "VERB", "PROPN", "PART", "NUM", "PUNCT", "NOUN", "NOUN", "PUNCT", "CCONJ", "ADV", "PRON", "VERB", "VERB", "ADP", "DET", "NOUN", "SCONJ", "PRON"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "NOUN", "NOUN", "AUX", "VERB", "ADP", "NOUN", "CCONJ", "VERB", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "AUX", "VERB", "DET", "NOUN", "PART", "ADJ", "NOUN", "PUNCT", "ADJ", "PUNCT", "ADJ", "NOUN", "PUNCT", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "DET", "ADJ", "NOUN", "NOUN", "AUX", "VERB", "ADP", "NOUN", "CCONJ", "NOUN", "ADP", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "VERB", "DET", "NOUN", "ADP", "ADJ", "NOUN", "PUNCT", "NOUN", "PART", "VERB", "PUNCT", "NOUN", "PART", "VERB", "NOUN", "PUNCT", "ADV", "PRON", "VERB", "VERB", "PUNCT", "PRON", "VERB", "VERB", "PART", "AUX", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "NOUN", "PUNCT", "ADP", "PUNCT", "NOUN", "NOUN", "VERB", "ADP", "VERB", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "AUX", "NOUN", "ADJ", "NOUN", "VERB", "ADP", "NOUN", "ADP", "PROPN", "PROPN", "SCONJ", "PRON", "VERB"]}], [{"py/object": "builtins.generator", "py/iterator": ["SCONJ", "PART", "ADV", "ADJ", "SCONJ", "NOUN", "PUNCT", "DET", "NOUN", "VERB", "VERB", "DET", "PROPN", "NOUN", "ADP", "DET", "NOUN", "PUNCT", "NOUN", "PUNCT", "ADJ", "PUNCT", "CCONJ", "ADV", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "NOUN", "NOUN", "AUX", "VERB", "ADP", "NOUN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "CCONJ", "PROPN", "PROPN", "AUX", "VERB", "ADV", "SYM", "NUM", "NUM", "PUNCT", "ADV", "ADV", "PUNCT", "PUNCT", "ADV", "VERB", "PRON", "PRON", "VERB", "VERB"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "PROPN", "PROPN", "VERB", "VERB", "VERB", "DET", "ADJ", "NOUN", "PRON", "VERB", "ADP", "DET", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "NOUN", "PUNCT", "ADP", "PUNCT", "NOUN", "NOUN", "VERB", "ADP", "VERB", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "PART", "VERB", "ADP", "NOUN", "NOUN", "AUX", "VERB", "PROPN", "VERB", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "VERB", "PRON", "VERB", "ADP", "DET", "NUM", "NOUN", "ADP", "NOUN", "DET", "AUX", "PART", "AUX", "NOUN", "NOUN", "PART", "VERB", "ADP", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "ADJ", "VERB", "NOUN", "ADP", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "PART", "VERB", "SCONJ", "DET", "NOUN", "AUX", "ADV", "VERB", "PUNCT", "NOUN", "PART", "ADJ", "NOUN", "NOUN", "AUX", "ADP", "PRON"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PROPN", "VERB", "DET", "NOUN", "PART", "AUX", "ADJ", "ADP", "DET", "VERB", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "ADJ", "VERB", "NOUN", "ADP", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "ADV", "AUX", "DET", "NOUN", "ADV", "PRON", "VERB", "AUX", "DET", "NOUN", "NOUN", "ADP", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "NOUN", "NOUN", "AUX", "VERB", "ADP", "NOUN", "CCONJ", "VERB", "NOUN"]}]], "clean": ["who need best by label when -pron- package be sense the food inside -pron-", "how this danish energy company be transition from oil and gas to all renewable", "how bernie sanders plan to revive the new deal govern by mobilization", "this portable personal cleaning device mimic a cat tongue", "the north face be send -pron- designer back to school", "reproductive health be a business issue", "these bacteria sniff dog be protect -pron- orange juice from a global citrus pandemic", "this biodegradable bioplastic suck carbon from the air", "this city have a plan to stop homelessness by the end of the year", "create new park in city can be slow expensive and time consume this new system can help", "way that supermarket can help eliminate single use plastic", "how this danish energy company be transition from oil and gas to all renewable", "fruit scrap and ugly piece of produce be find second life", "how to unleash creativity on the world big problem from alphabet moonshot division", "these carbon offset counter -pron- emission while help rain forest worker access healthcare", "if uber and lyft get ahead of ev mandate -pron- could become the sustainable leader -pron- so often claim to be", "this be not a new technology -pron- like to say -pron- to million year old", "by the will lose billion a year because of all the nature -pron- destroy", "the north face late quest clothe that last forever", "this startup want to replace traditional package delivery with hyperlocal electric trike drive courier", "eat honey be more complicated than -pron- may think", "the north face late quest clothe that last forever", "uber and lyft should electrify -pron- fleet before city make -pron- do -pron- anyway", "user congrat to user a winner of -pron- environmental journalism award", "these darpa fund brick can self repair and replicate", "the body shop will start hire the first person who apply for any retail job", "check out the australian shopping center that touted as the most sustainable in the world", "progressive politician push for climate action be make republicans rethink -pron- denial", "-pron- time to regulate fashion the way -pron- regulate the oil industry", "the simple design change that could help doctor prevent opioid addiction", "where in the be the rent too damn high everywhere", "this nonprofit turn vacant storefront into pop up communal space", "warming be go to push farming north release huge swath of carbon store in the soil", "this electric motorcycle startup be transform the rwandan taxi industry", "the box for this toy do get throw out -pron- part of the toy", "even business to business company benefit from have a purpose", "giant brand love loop zero waste packaging and now -pron- come to a store near -pron-", "this new organization want to help city create a broad idea of what resilience mean", "how map track climate disaster fall short and endanger life", "in this new dutch neighborhood there will be share car for every household", "by \u00f8rsted plan to be the first carbon neutral utility", "could this gorgeous electric plane be the tesla of the sky", "this just add water hand wash let -pron- stop use so many plastic bottle", "this new sugar substitute be make from food waste", "get used to the look of amazon new electric delivery van because -pron- make of -pron-", "this electric motorcycle startup be transform the rwandan taxi industry", "people have opinion about the way -pron- look leave -pron- at that", "this compostable packaging can tell -pron- when -pron- food be go bad", "-pron- on track to hit c of warm in here how -pron- will change -pron- work live", "food delivery worker in spend more to make a delivery than anywhere else", "progressive politician push for climate action be make republicans rethink -pron- denial", "uber and lyft should electrify -pron- fleet before city make -pron- do -pron- anyway", "california consider tax on company with large pay gap between ceo and -pron- worker", "what will -pron- take for the of company that do have climate commitment to step up", "imagine a world of sustainable regenerative brand", "the fabric call circulose be a new innovation that let old fabric be turn into new thread", "this robot trash bin automatically sort -pron- recyclables for -pron-", "scientist analyze city and determine how to design safe street", "if bacteria do kill -pron- the old fashioned way -pron- just kill -pron- with climate change instead", "this bacon look like the real thing as -pron- sizzle but -pron- make from fungus", "even look at flood map can convince coastal resident -pron- home will be underwater", "get used to the look of amazon new electric delivery van because -pron- make of -pron-", "can food bank put an end to hunger if -pron- big donor be the cause of the hunger", "bill and melinda gates have give away billion so far here what -pron- learn", "this graph will show -pron- the carbon footprint of -pron- protein", "worker buy in be the real key for successful corporate sustainability", "what happen when all the tiny satellite -pron- shoot into space get hack", "how map track climate disaster fall short and endanger life", "park in a truck be like ikea but for build neighborhood park", "even -pron- tofu ship to -pron- across the world and wrap in plastic will have a low footprint than meat", "scientist analyze city and determine how to design safe street", "of the fortune have make a real climate commitment", "this startup want to replace traditional package delivery with hyperlocal electric trike drive courier", "boston university be build the city large carbon neutral fossil fuel free building", "how map track climate disaster fall short and endanger life", "the box for this toy do get throw out -pron- part of the toy", "most democratic candidate talk about reining in wall street but -pron- short on specific", "in this new dutch neighborhood there will be share car for every household", "reproductive health be a business issue", "this new magical coating save water by make toilet so slippery that poop basically flush -pron-", "giant brand love loop zero waste packaging and now -pron- come to a store near -pron-", "this new dress be make from wood and recycle jean", "boston university be build the city large carbon neutral fossil fuel free building", "how this danish energy company be transition from oil and gas to all renewable", "-pron- use a lot of natural process bee to pollinate river to irrigate crop when -pron- go -pron- go to get", "even business to business company benefit from have a purpose", "there be way more people struggle with poverty in new york than -pron- think", "while not as strong as concrete the brick could reduce the footprint of a building self heal and even repro", "this new sugar substitute be make from food waste", "bill and melinda gates have give away billion so far here what -pron- learn", "the body shop will start hire the first person who apply for any retail job", "even business to business company benefit from have a purpose", "progressive politician push for climate action be make republicans rethink -pron- denial", "what will -pron- take for the of company that do have climate commitment to step up", "this biodegradable bioplastic suck carbon from the air", "want to know if -pron- clothe be ethically source theory new labeling system be for -pron-", "how unicef redesign -pron- tent to be ready for a change world", "this biodegradable bioplastic suck carbon from the air", "why just have a box when -pron- can have a launch tower for a rocket", "this new dress be make from wood and recycle jean"]}