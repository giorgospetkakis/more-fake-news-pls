{"py/object": "data.Author", "author_id": "2zszbxip2txqztt22cogmmnatf3egx3f", "truth": 0, "tweets": ["#USER# can i get your contact info?", "RT #USER#: Follow #HASHTAG# for the largest network of journalists in Ottawa. Algonquin journalism students supplementing Ottawa Citize\u2026", "Best bus driver on the 95 right now. I feel like I'm on a guided tour. #HASHTAG# #HASHTAG#", "RT #USER#: \"I'm feeling honoured,\" says #HASHTAG# winner #HASHTAG# Yousafzai #URL# #URL#", "Liberal candidate for Carleton-Mississippi Mills #USER# campaign received a B- overall according to #URL#", "YouTube is a new way of creating/consuming media &amp; Ottawa has stars of their own. Check out my piece in #USER# #URL#", "#USER# open for #USER# to kick off Orientation Week at #USER# #HASHTAG# #USER# #URL#", "RT #USER#: RT #USER#: #USER# camp saying it's too close to call in #HASHTAG#. Taylor only a slight lead on #USER#  #HASHTAG#\u2026", "#USER# #USER# a couple'a hustlin' fellas came by to talk about their upcoming film and online auditions #URL#", "RT #USER#: At least one person wounded in shooting at National War Memorial. Centre and East Blocks on Parl. Hill are locked down.", "Mark Taylor leading in Bay ward # ATvotes", "Nervous crowd awaits official declaration of Taylor as winner of Bay ward. He's only 450 votes ahead of Cullen. #HASHTAG#", "#USER# Pedaling with Bombay Bicycle Club #URL# via #USER#", "Dom looking so dashing in his bowtie for national dog day\u2026 #URL#", "RT #USER#: Power outage: what we know so\u00a0far #URL#", "RT #USER#: #USER# in November? A great way to end the term. #HASHTAG# #URL#", "#USER# Hey! I'm a journalist at Gulf News covering the UK election. Are you voting and have a minute for a quick chat?", "#USER# its here! Stop by Algonquin College to see your face in #USER# #URL#", "RT #USER#: #USER# ELECTED: 7. Bay - Mark Taylor #HASHTAG# #HASHTAG#", "#USER# Hi, I'm a journalist at Gulf News in Dubai covering the UK election. Have a minute for a chat?", "Valentine's Day date with #USER# at CBC today ;)", "#USER# #USER# all the dog pics please", "#USER# not too late! Inbox me your number.", "#USER# found an unopened bag of mini eggs in an old jacket. Its a good day.", "Published piece of Trudeau at #USER#  #URL#", "#USER# #USER# #USER# stopped by #USER#  last week. Here's my coverage of it #URL#", "RT #USER#: Interview with samanthajlong89 at Algonquin Times #HASHTAG# #HASHTAG# #HASHTAG# #URL#\u2026", "RT #USER#: Senators. The talk of the town. #HASHTAG# #HASHTAG# #HASHTAG# #HASHTAG# #URL#", "#USER# I did graduate last year, back on the east coast now. Hope all is well with you!", "RT #USER#: A belated thanks to #USER# for profiling your new President in your paper! #USER#", "#USER# if you're planning on voting or not in the election.", "First concert of the semester. #USER# #USER#  #HASHTAG# #URL#", "My two favorite things: interviews and makeup chat with #USER# for the winter issue of #USER#.", "#USER# thanks for remembering! Check it! #URL#", "Thin margin between Taylor and Cullen in Bay ward. The room isn't even applauding. #HASHTAG#", "RT #USER#: Statement from Premier Paul Davis. #URL#", "RT #USER#: Incumbent Rick Chiarelli has lead in College Ward and Mark Taylor has the lead over Alex Cullen in Bay #HASHTAG#", "#USER# Hey, I'm a journalist at Gulf News covering the UK elections. Do you have a minute for a chat?", "Lots of support in the room for #USER# #HASHTAG# #URL#", "If only I could spend all the money I've invested into my car on makeup instead.", "RT #USER#: Gander International Airport #URL# #URL#", "RT #USER#: You pronounce Newfoundland like \"understand\", according to my friend who just shot a movie there.", "#USER# do I have to wait an hour in the phone queue to swap my SIM card or can I do it online?", "#USER# thanks for all your help! #URL#", "#USER# greeted by cheers at Papa Sam's in Kanata. #URL#", "Prospective journalist me a year ago would never believe I use Sedar on a daily basis.", "Algonquin loses application of two campuses in Qatif, Saudi Arabia. President indicates deficit in Jazan may have played a role. #USER#", "#USER# Hey,I'm a journalist at Gulf News writing about the upcoming UK election. Are you voting by chance?Have a minute for a quick chat?", "Bombay Bicycle Club stopped by the #USER# on Oct. 17. Check out my story in the #USER# this Thurs. #URL#", "RT #USER#: #HASHTAG# picks up again in Ottawa tomorrow at #USER#. So stoked to be back on the road! #URL#", "What's Algonquin's new president #USER#'s view on the Saudi campuses?Learn more about Cheryl in the upcoming #USER#", "Some cool Ottawa YouTubers in the new issue of #USER# out now! #USER# #USER# #USER# #URL#", "#USER# I'm a reporter working for metroland tonight. Will you be around Time Out Bar &amp; Grill tonight for a few words after?", "RT #USER#: Are you fashionable enough for Dubai? Here are the most carried handbags in town", "RT #USER#: Shoutout &amp; thanks #USER# 4 featuring me in Glue Mag &amp; follow #USER# for being awesome &amp; making it happen\u263a\ufe0f h\u2026", "Waiting for #USER# to arrive in Bay ward. #HASHTAG#. He won last year against longtime councilor Alex Cullen #URL#", "#USER# your piece in the #USER#  #HASHTAG#", "Just sat down with #USER# new president #USER#. She's looking forward to mingling with the students. #USER#", "Liberal candidate #USER#  3000 votes behind PC MacLaren.", "#USER# okay cool! Inbox me your number.", "#USER# thanks for all your help! #URL#", "Carleton-Mississippi Mills Liberal candidate #USER# behind by 700 votes. Riding has been PC for 148 years.", "RT #USER#: ELECTED: 7. Bay - Mark Taylor #HASHTAG# #HASHTAG#", "RT #USER#: Johnny Cash\u2019s son arrested in his underwear at Deer Lake airport #URL#", "Dear #USER#. Can you please make a #USER# filter. #URL#", "I'm a real journalist meow! Right by the bridge in hfx #URL#", "RT #USER#: .#USER# confirms that a transportation referendum is upcoming. #HASHTAG# See my previous U-Pass stories...http\u2026", "Ive been to Canadian Tire twice this week. Ew.", "#USER# Such a coincidence, yes! The online content went up today. Hope all is well with you :)", "#USER# DM me! I need to ask you a question.", "The guy blaring Celine Dion on Duckworth St is my soulmate &lt;3.", "400 votes separate Taylor from Cullen in Bay ward #HASHTAG#", "#USER# Sexual harassment dominates headlines #URL# via #USER#", "\"This is your first lesson in business class...remember its nothing but fake money. \" #USER# #USER# #URL#", "108/311 polls predict PC Jack MacLaren the clear winner of #HASHTAG#.", "#USER# just complimented me on my shawl. Guess I'm exuding 'homeless chic' today.", "Listening to Omar Khadr's Canadian lawyer talk #USER# about his treatment in Guantanamo for #USER#", "#USER# Hey! I'm a journalism student writing a piece on YouTubers in Ottawa. Would you be free for a chat?", "RT #USER#: It's okay to be scared.  We are here for you 613-238-3311 #HASHTAG#", "Taylor addresses the crowd after a tight race #HASHTAG# #URL#", "Patiently waiting on Strangelove to call me for a interview. First question: can you summarize you're book on YouTube in 15 minutes?", "Liberal candidate leading 33-20 in #HASHTAG#", "#USER# I am a journalist in Ottawa &amp; have a story w sources about Muslim discrimination by RCMP in St.John's interested in details?", "#USER# Hey! I'm a journalist at Gulf News in Dubai covering the UK election. Have a minute for a quick chat?", "#USER# thanks for all your help! #URL#", "Slut shaming needs to stop. My column in the #USER# #HASHTAG# #URL#", "RT #USER#: I almost never use twitter for work, but since we're launching the latest news media outlet in town ....  #URL#\u2026", "Watching the votes come in at Rosalyn Steven's headquarters in Kanata. #URL#", "Just sent my first interview request via Instagram. #HASHTAG#", "RT #USER#: Breakfast meeting; meeting councillors; phone calls; speaking to J class at algonquin; trustees dinner; Candlelight vi\u2026", "RT #USER#: The cat seems sufficiently out of the bag. Warm welcome to #USER#, the newest addition to #URL#\u2026", "Positive vibes of a job well done at Liberal candidate #USER# despite PC taking the vote. #HASHTAG# #HASHTAG#", "Dubai's fur industry is feeling the heat in the wake of Russia's recession. #URL#", "Best part of working in the office alone: I can talk to myself and no one tells me to shut up.", "#USER# are you voting in the UK election?", "#USER# cancels 2 more campuses in Saudi Arabia due to rocky first year in Jazan. Read #USER# on Thurs for more.", "#USER# I'm a journalist #USER# writing a piece about popular bags in Dubai. Is there a sales rep/communications dept to talk with?", "RT #USER#: Excited to welcome #USER# to the growing newsroom at the newly renamed #URL#!", "#USER# rough start in #USER# lead to the cancellation of two new campuses in Saudi. Read my story here #URL#", "Summer fun begins in two days. Vacation + moving! #USER# #USER#"], "ents": [[], [{"py/tuple": ["Ottawa", "GPE"]}, {"py/tuple": ["Algonquin", "PERSON"]}, {"py/tuple": ["Ottawa Citize", "PERSON"]}], [{"py/tuple": ["95", "CARDINAL"]}], [{"py/tuple": ["Yousafzai", "ORG"]}], [{"py/tuple": ["Carleton-Mississippi Mills ", "ORG"]}], [{"py/tuple": ["YouTube", "PRODUCT"]}, {"py/tuple": ["Ottawa", "GPE"]}], [{"py/tuple": ["Orientation Week", "EVENT"]}], [{"py/tuple": ["Taylor", "PERSON"]}], [], [{"py/tuple": ["At least one", "CARDINAL"]}, {"py/tuple": ["National War Memorial", "FAC"]}, {"py/tuple": ["Centre", "GPE"]}, {"py/tuple": ["East Blocks", "GPE"]}, {"py/tuple": ["Parl", "GPE"]}], [{"py/tuple": ["Mark Taylor", "PERSON"]}, {"py/tuple": ["Bay ward", "LOC"]}, {"py/tuple": ["ATvotes", "ORG"]}], [{"py/tuple": ["Taylor", "PERSON"]}, {"py/tuple": ["Bay ward", "FAC"]}, {"py/tuple": ["only 450", "CARDINAL"]}, {"py/tuple": ["Cullen", "GPE"]}], [{"py/tuple": ["Bombay Bicycle Club", "ORG"]}], [], [], [{"py/tuple": ["November", "DATE"]}], [{"py/tuple": ["Gulf News", "ORG"]}, {"py/tuple": ["UK", "GPE"]}], [{"py/tuple": ["Algonquin College", "ORG"]}], [{"py/tuple": ["7", "CARDINAL"]}, {"py/tuple": ["Bay - Mark Taylor", "PERSON"]}], [{"py/tuple": ["Gulf News", "ORG"]}, {"py/tuple": ["Dubai", "GPE"]}, {"py/tuple": ["UK", "GPE"]}], [{"py/tuple": ["Valentine", "PERSON"]}, {"py/tuple": ["CBC", "ORG"]}, {"py/tuple": ["today", "DATE"]}], [], [], [{"py/tuple": ["a good day", "DATE"]}], [{"py/tuple": ["Trudeau", "PERSON"]}], [{"py/tuple": ["  ", "LAW"]}, {"py/tuple": ["last week", "DATE"]}], [{"py/tuple": ["Algonquin Times", "ORG"]}], [], [{"py/tuple": ["last year", "DATE"]}, {"py/tuple": ["the east coast", "LOC"]}], [], [], [{"py/tuple": ["First", "ORDINAL"]}, {"py/tuple": ["    ", "PERSON"]}], [{"py/tuple": ["two", "CARDINAL"]}, {"py/tuple": ["winter", "DATE"]}], [], [{"py/tuple": ["Taylor", "PERSON"]}, {"py/tuple": ["Cullen", "PERSON"]}, {"py/tuple": ["Bay ward", "LOC"]}], [{"py/tuple": ["Paul Davis", "PERSON"]}], [{"py/tuple": ["Rick Chiarelli", "PERSON"]}, {"py/tuple": ["College Ward", "GPE"]}, {"py/tuple": ["Mark Taylor", "PERSON"]}, {"py/tuple": ["Alex Cullen", "PERSON"]}], [{"py/tuple": ["Gulf News", "ORG"]}, {"py/tuple": ["UK", "GPE"]}, {"py/tuple": ["a minute", "TIME"]}], [], [], [{"py/tuple": ["Gander International Airport", "FAC"]}], [{"py/tuple": ["Newfoundland", "ORG"]}], [{"py/tuple": ["an hour", "TIME"]}, {"py/tuple": ["SIM", "ORG"]}], [], [{"py/tuple": ["Papa Sam's", "PERSON"]}, {"py/tuple": ["Kanata", "GPE"]}], [{"py/tuple": ["a year ago", "DATE"]}, {"py/tuple": ["daily", "DATE"]}], [{"py/tuple": ["two", "CARDINAL"]}, {"py/tuple": ["Qatif", "GPE"]}, {"py/tuple": ["Saudi Arabia", "GPE"]}, {"py/tuple": ["Jazan", "GPE"]}], [{"py/tuple": ["Gulf News", "ORG"]}, {"py/tuple": ["UK", "GPE"]}], [{"py/tuple": ["Bombay Bicycle Club", "ORG"]}, {"py/tuple": ["Oct. 17", "DATE"]}], [{"py/tuple": ["Ottawa", "GPE"]}, {"py/tuple": ["tomorrow", "DATE"]}], [{"py/tuple": ["Algonquin", "ORG"]}, {"py/tuple": ["Saudi", "NORP"]}, {"py/tuple": ["cuses?Learn", "ORG"]}, {"py/tuple": ["Cheryl", "PERSON"]}], [{"py/tuple": ["Ottawa YouTubers", "PERSON"]}, {"py/tuple": ["  ", "PERSON"]}], [{"py/tuple": ["tonight", "TIME"]}, {"py/tuple": ["Time Out Bar", "ORG"]}, {"py/tuple": ["Grill tonight", "TIME"]}], [{"py/tuple": ["Dubai", "GPE"]}], [{"py/tuple": ["Glue Mag", "PERSON"]}, {"py/tuple": ["\u263a", "ORG"]}], [{"py/tuple": ["Bay ward", "LOC"]}, {"py/tuple": ["last year", "DATE"]}, {"py/tuple": ["Alex Cullen", "PERSON"]}], [], [], [{"py/tuple": ["3000", "CARDINAL"]}], [], [], [{"py/tuple": ["Carleton-Mississippi Mills Liberal", "ORG"]}, {"py/tuple": ["700", "CARDINAL"]}, {"py/tuple": ["148 years", "DATE"]}], [{"py/tuple": ["7", "CARDINAL"]}, {"py/tuple": ["Bay - Mark Taylor", "PERSON"]}], [{"py/tuple": ["Johnny Cash", "PERSON"]}, {"py/tuple": ["Deer Lake", "LOC"]}], [], [], [{"py/tuple": ["U-Pass", "PRODUCT"]}], [{"py/tuple": ["Canadian", "NORP"]}, {"py/tuple": ["this week", "DATE"]}], [{"py/tuple": ["today", "DATE"]}], [], [{"py/tuple": ["Celine Dion", "PERSON"]}, {"py/tuple": ["Duckworth St", "PERSON"]}], [{"py/tuple": ["400", "CARDINAL"]}, {"py/tuple": ["Taylor", "PERSON"]}, {"py/tuple": ["Cullen", "GPE"]}], [{"py/tuple": [" Sexual", "ORG"]}], [{"py/tuple": ["first", "ORDINAL"]}, {"py/tuple": [" ", "WORK_OF_ART"]}], [{"py/tuple": ["108/311", "CARDINAL"]}, {"py/tuple": ["Jack MacLaren", "PERSON"]}], [{"py/tuple": ["today", "DATE"]}], [{"py/tuple": ["Omar Khadr's", "PERSON"]}, {"py/tuple": ["Canadian", "NORP"]}, {"py/tuple": ["Guantanamo", "FAC"]}], [{"py/tuple": ["YouTubers", "ORG"]}, {"py/tuple": ["Ottawa", "GPE"]}], [{"py/tuple": ["613", "CARDINAL"]}], [{"py/tuple": ["Taylor", "PERSON"]}], [{"py/tuple": ["First", "ORDINAL"]}, {"py/tuple": ["YouTube", "LAW"]}, {"py/tuple": ["15 minutes", "TIME"]}], [{"py/tuple": ["33-20", "CARDINAL"]}], [{"py/tuple": ["Ottawa", "GPE"]}, {"py/tuple": ["Muslim", "NORP"]}, {"py/tuple": ["John", "PERSON"]}], [{"py/tuple": ["Gulf News", "ORG"]}, {"py/tuple": ["Dubai", "GPE"]}, {"py/tuple": ["UK", "GPE"]}], [], [], [], [{"py/tuple": ["Rosalyn Steven's", "PERSON"]}, {"py/tuple": ["Kanata", "GPE"]}], [{"py/tuple": ["first", "ORDINAL"]}, {"py/tuple": ["Instagram", "DATE"]}], [{"py/tuple": ["Candlelight vi", "PERSON"]}], [], [], [{"py/tuple": ["Dubai", "GPE"]}, {"py/tuple": ["Russia", "GPE"]}], [], [{"py/tuple": ["UK", "GPE"]}], [{"py/tuple": ["2", "CARDINAL"]}, {"py/tuple": ["Saudi Arabia", "GPE"]}, {"py/tuple": ["Jazan", "GPE"]}, {"py/tuple": ["Thurs", "GPE"]}], [{"py/tuple": ["Dubai", "GPE"]}], [], [{"py/tuple": ["two", "CARDINAL"]}, {"py/tuple": ["Saudi", "NORP"]}], [{"py/tuple": ["Summer", "DATE"]}, {"py/tuple": ["two days", "DATE"]}]], "POS_tags": [[{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "PRON", "AUX", "DET", "NOUN", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "VERB", "SPACE", "ADP", "DET", "ADJ", "NOUN", "ADP", "NOUN", "ADP", "PROPN", "PUNCT", "NOUN", "NOUN", "NOUN", "VERB", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "NOUN", "ADP", "DET", "NUM", "ADV", "ADV", "PUNCT", "PRON", "VERB", "SCONJ", "PRON", "AUX", "ADP", "DET", "VERB", "NOUN", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "PUNCT", "PRON", "AUX", "VERB", "VERB", "PUNCT", "PUNCT", "VERB", "SPACE", "NOUN", "SPACE", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "ADP", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "NOUN", "VERB", "DET", "NOUN", "ADJ", "VERB", "ADP"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "AUX", "DET", "ADJ", "NOUN", "ADP", "VERB", "SYM", "VERB", "NOUN", "PUNCT", "PROPN", "AUX", "NOUN", "ADP", "DET", "ADJ", "PUNCT", "VERB", "ADP", "DET", "NOUN", "ADP", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "ADJ", "ADP", "PROPN", "PART", "VERB", "ADP", "PROPN", "PROPN", "ADP", "PROPN", "SPACE", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "SPACE", "PROPN", "PUNCT", "PROPN", "PROPN", "VERB", "PRON", "AUX", "ADV", "ADJ", "PART", "VERB", "ADP", "PUNCT", "PROPN", "ADV", "DET", "ADJ", "NOUN", "ADP", "PROPN", "SPACE", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "DET", "X", "PROPN", "PUNCT", "NOUN", "VERB", "ADV", "PART", "VERB", "ADP", "DET", "ADJ", "NOUN", "CCONJ", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "ADV", "ADV", "NUM", "NOUN", "VERB", "ADP", "VERB", "ADP", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "CCONJ", "PROPN", "PROPN", "ADP", "PROPN", "PUNCT", "PROPN", "AUX", "VERB", "ADP", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "VERB", "ADP", "PROPN", "NOUN", "SPACE", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "VERB", "ADJ", "NOUN", "ADP", "PROPN", "SCONJ", "NOUN", "ADP", "PROPN", "NOUN", "PUNCT", "PRON", "AUX", "ADV", "NUM", "NOUN", "ADV", "ADP", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "ADP", "PROPN", "PROPN", "PROPN", "SPACE", "ADP", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "VERB", "ADV", "VERB", "ADP", "DET", "NOUN", "ADP", "ADJ", "NOUN", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "NOUN", "NOUN", "PUNCT", "PRON", "PRON", "VERB", "ADV", "SPACE", "ADV"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "PROPN", "PUNCT", "PROPN", "ADP", "PROPN", "PUNCT", "DET", "ADJ", "NOUN", "PART", "VERB", "DET", "NOUN", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "INTJ", "PUNCT", "PRON", "AUX", "DET", "NOUN", "ADP", "PROPN", "PROPN", "VERB", "DET", "PROPN", "NOUN", "PUNCT", "AUX", "PRON", "VERB", "CCONJ", "AUX", "DET", "NOUN", "ADP", "DET", "ADJ", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "DET", "ADV", "PUNCT", "VERB", "ADP", "PROPN", "PROPN", "PART", "VERB", "DET", "NOUN", "ADP", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "PROPN", "PROPN", "PUNCT", "X", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "INTJ", "PUNCT", "PRON", "AUX", "DET", "NOUN", "ADP", "PROPN", "PROPN", "ADP", "PROPN", "VERB", "DET", "PROPN", "NOUN", "PUNCT", "AUX", "DET", "NOUN", "ADP", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PART", "PROPN", "NOUN", "ADP", "PROPN", "ADP", "PROPN", "NOUN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "DET", "DET", "NOUN", "NOUN", "INTJ"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PART", "ADV", "ADJ", "PUNCT", "VERB", "PRON", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "DET", "ADJ", "NOUN", "ADP", "ADJ", "NOUN", "ADP", "DET", "ADJ", "NOUN", "PUNCT", "DET", "DET", "ADJ", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "NOUN", "ADP", "PROPN", "ADP", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PROPN", "VERB", "ADP", "PROPN", "SPACE", "ADJ", "NOUN", "PUNCT", "ADV", "AUX", "DET", "NOUN", "ADP", "PRON"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "PROPN", "PUNCT", "VERB", "ADP", "NUM", "ADP", "PROPN", "PROPN", "SPACE", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "NOUN", "PUNCT", "DET", "NOUN", "ADP", "DET", "NOUN", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PRON", "AUX", "VERB", "ADJ", "NOUN", "PUNCT", "ADV", "ADP", "DET", "PROPN", "NOUN", "ADV", "PUNCT", "VERB", "DET", "AUX", "ADJ", "ADP", "PRON", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "DET", "VERB", "NOUN", "ADP", "PROPN", "ADP", "VERB", "DET", "ADJ", "PROPN", "ADP", "DET", "NOUN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "SCONJ", "PRON", "AUX", "VERB", "ADP", "NOUN", "CCONJ", "PART", "ADP", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "ADP", "DET", "NOUN", "PUNCT", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NUM", "ADJ", "NOUN", "PUNCT", "NOUN", "CCONJ", "NOUN", "NOUN", "ADP", "PROPN", "ADP", "DET", "NOUN", "NOUN", "ADP", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "NOUN", "ADP", "VERB", "PUNCT", "VERB", "PRON", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "ADP", "PROPN", "CCONJ", "PROPN", "ADP", "PROPN", "NOUN", "PUNCT", "DET", "NOUN", "AUX", "PART", "ADV", "VERB", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "NOUN", "ADP", "PROPN", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "AUX", "VERB", "ADP", "PROPN", "PROPN", "CCONJ", "PROPN", "PROPN", "AUX", "DET", "NOUN", "ADP", "PROPN", "PROPN", "ADP", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "INTJ", "PUNCT", "PRON", "AUX", "DET", "NOUN", "ADP", "PROPN", "PROPN", "VERB", "DET", "PROPN", "NOUN", "PUNCT", "AUX", "PRON", "AUX", "DET", "NOUN", "ADP", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "ADP", "NOUN", "ADP", "DET", "NOUN", "ADP", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["SCONJ", "ADV", "PRON", "VERB", "VERB", "DET", "DET", "NOUN", "PRON", "AUX", "VERB", "ADP", "DET", "NOUN", "ADP", "NOUN", "ADV", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "PRON", "VERB", "PROPN", "SCONJ", "PUNCT", "VERB", "PUNCT", "PUNCT", "VERB", "ADP", "DET", "NOUN", "PRON", "ADV", "VERB", "DET", "NOUN", "ADV", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "AUX", "PRON", "AUX", "PART", "VERB", "DET", "NOUN", "ADP", "DET", "NOUN", "NOUN", "PART", "VERB", "DET", "PROPN", "NOUN", "CCONJ", "VERB", "PRON", "AUX", "PRON", "ADV", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "NOUN", "ADP", "DET", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "ADP", "NOUN", "ADP", "PROPN", "PROPN", "PART", "ADP", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "PRON", "DET", "NOUN", "ADV", "VERB", "ADV", "VERB", "PRON", "VERB", "PROPN", "ADP", "DET", "ADJ", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "VERB", "NOUN", "ADP", "NUM", "NOUN", "ADP", "PROPN", "PUNCT", "PROPN", "PROPN", "PUNCT", "PROPN", "VERB", "NOUN", "ADP", "PROPN", "VERB", "AUX", "VERB", "DET", "NOUN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "INTJ", "PUNCT", "VERB", "DET", "NOUN", "ADP", "PROPN", "PROPN", "VERB", "ADP", "DET", "ADJ", "PROPN", "NOUN", "PUNCT", "AUX", "PRON", "VERB", "ADP", "VERB", "DET", "NOUN", "ADP", "DET", "ADJ", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PROPN", "VERB", "ADP", "DET", "PROPN", "ADP", "PROPN", "NUM", "PUNCT", "VERB", "ADP", "DET", "NOUN", "ADP", "DET", "PROPN", "DET", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "PROPN", "PUNCT", "SPACE", "VERB", "ADP", "ADV", "ADP", "PROPN", "NOUN", "ADP", "PROPN", "PUNCT", "ADV", "VERB", "PART", "AUX", "ADV", "ADP", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "AUX", "PROPN", "PART", "ADJ", "PROPN", "PROPN", "PART", "NOUN", "ADP", "DET", "ADJ", "VERB", "ADV", "ADP", "PROPN", "ADP", "DET", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "PROPN", "PROPN", "ADP", "DET", "ADJ", "NOUN", "ADP", "PROPN", "ADP", "ADV", "PUNCT", "PROPN", "PROPN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PRON", "AUX", "DET", "NOUN", "VERB", "ADP", "PROPN", "NOUN", "PUNCT", "VERB", "PRON", "AUX", "ADP", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "NOUN", "ADP", "DET", "ADJ", "NOUN", "ADV", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "AUX", "PRON", "ADJ", "ADV", "ADP", "PROPN", "PUNCT", "ADV", "AUX", "DET", "ADV", "VERB", "NOUN", "ADP", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "ADP", "PUNCT", "NOUN", "PROPN", "NUM", "VERB", "PRON", "ADP", "PROPN", "PROPN", "PUNCT", "VERB", "PROPN", "ADP", "AUX", "ADJ", "PUNCT", "VERB", "PRON", "VERB", "PROPN", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "ADP", "PROPN", "PART", "VERB", "ADP", "PROPN", "NOUN", "PUNCT", "PUNCT", "PRON", "VERB", "ADJ", "NOUN", "ADP", "NOUN", "NOUN", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "DET", "NOUN", "ADP", "DET", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "VERB", "ADP", "ADP", "PROPN", "ADJ", "NOUN", "PROPN", "PUNCT", "PRON", "AUX", "VERB", "ADV", "ADP", "VERB", "ADP", "DET", "NOUN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "PROPN", "SPACE", "NUM", "NOUN", "ADP", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "INTJ", "INTJ", "PUNCT", "VERB", "PRON", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "NOUN", "ADP", "DET", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PUNCT", "PROPN", "PROPN", "ADJ", "NOUN", "NOUN", "ADV", "ADP", "NUM", "NOUN", "PUNCT", "NOUN", "AUX", "AUX", "NOUN", "ADP", "NUM", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "PROPN", "PUNCT", "X", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "PROPN", "PROPN", "PART", "NOUN", "VERB", "ADP", "DET", "NOUN", "ADP", "PROPN", "PROPN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "PUNCT", "VERB", "PRON", "INTJ", "VERB", "DET", "NOUN", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "AUX", "DET", "ADJ", "NOUN", "ADJ", "PUNCT", "ADV", "ADP", "DET", "NOUN", "ADP", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "PUNCT", "VERB", "SCONJ", "DET", "NOUN", "NOUN", "AUX", "VERB", "PUNCT", "SPACE", "VERB", "DET", "ADJ", "PROPN", "PUNCT", "PROPN", "NOUN", "PUNCT", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "VERB", "AUX", "ADP", "PROPN", "PROPN", "ADV", "DET", "NOUN", "PUNCT", "INTJ", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "DET", "DET", "NOUN", "PUNCT", "INTJ", "PUNCT", "DET", "ADJ", "NOUN", "VERB", "ADP", "NOUN", "PUNCT", "VERB", "DET", "AUX", "ADJ", "ADP", "PRON", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "PRON", "PUNCT", "PRON", "VERB", "PART", "VERB", "PRON", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "VERB", "PROPN", "PROPN", "ADP", "PROPN", "PROPN", "AUX", "DET", "NOUN", "CCONJ", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NUM", "NOUN", "ADJ", "PROPN", "ADP", "PROPN", "ADP", "PROPN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "ADJ", "NOUN", "VERB", "NOUN", "SPACE", "ADP", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PUNCT", "DET", "AUX", "DET", "ADJ", "NOUN", "ADP", "NOUN", "NOUN", "PUNCT", "VERB", "DET", "PRON", "SCONJ", "ADJ", "NOUN", "PUNCT", "PUNCT", "PROPN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "NOUN", "VERB", "NOUN", "PROPN", "PROPN", "DET", "ADJ", "NOUN", "ADP", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "ADV", "VERB", "PRON", "ADP", "DET", "NOUN", "PUNCT", "VERB", "PRON", "AUX", "VERB", "PUNCT", "ADJ", "ADJ", "PUNCT", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "ADP", "PROPN", "PROPN", "PART", "ADJ", "NOUN", "NOUN", "PROPN", "ADP", "DET", "NOUN", "ADP", "PROPN", "ADP", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "INTJ", "PUNCT", "PRON", "AUX", "DET", "NOUN", "NOUN", "VERB", "DET", "NOUN", "ADP", "PROPN", "ADP", "PROPN", "PUNCT", "VERB", "PRON", "AUX", "ADJ", "ADP", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "PRON", "AUX", "ADJ", "PART", "AUX", "VERB", "PUNCT", "SPACE", "PRON", "AUX", "ADV", "ADP", "PRON", "NUM", "PUNCT", "NUM", "PUNCT", "NUM"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "DET", "NOUN", "ADP", "DET", "ADJ", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "VERB", "ADP", "PROPN", "PART", "VERB", "PRON", "ADP", "DET", "NOUN", "PUNCT", "ADJ", "NOUN", "PUNCT", "VERB", "PRON", "VERB", "PRON", "AUX", "NOUN", "ADP", "PROPN", "ADP", "NUM", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "VERB", "NUM", "SYM", "NUM", "ADP"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PRON", "AUX", "DET", "NOUN", "ADP", "PROPN", "PUNCT", "AUX", "DET", "NOUN", "NOUN", "NOUN", "ADP", "ADJ", "NOUN", "ADP", "PROPN", "ADP", "PROPN", "PUNCT", "PROPN", "PART", "VERB", "ADP", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "INTJ", "PUNCT", "PRON", "AUX", "DET", "NOUN", "ADP", "PROPN", "PROPN", "ADP", "PROPN", "VERB", "DET", "PROPN", "NOUN", "PUNCT", "AUX", "DET", "NOUN", "ADP", "DET", "ADJ", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "NOUN", "ADP", "DET", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "VERB", "PART", "VERB", "PUNCT", "DET", "NOUN", "ADP", "DET", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "PRON", "ADV", "ADV", "VERB", "NOUN", "ADP", "NOUN", "PUNCT", "CCONJ", "SCONJ", "PRON", "AUX", "VERB", "DET", "ADJ", "NOUN", "NOUN", "NOUN", "ADP", "NOUN", "PUNCT", "SPACE", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "DET", "NOUN", "VERB", "ADP", "ADP", "PROPN", "PROPN", "PART", "NOUN", "ADP", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "VERB", "DET", "ADJ", "NOUN", "NOUN", "ADP", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "PROPN", "NOUN", "PUNCT", "VERB", "NOUN", "PUNCT", "NOUN", "NOUN", "PUNCT", "VERB", "ADP", "PROPN", "NOUN", "ADP", "NOUN", "PUNCT", "VERB", "NOUN", "PUNCT", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "DET", "NOUN", "VERB", "ADV", "SCONJ", "ADP", "DET", "NOUN", "PUNCT", "ADJ", "NOUN", "ADP", "PROPN", "PUNCT", "DET", "ADJ", "NOUN", "ADP", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "ADP", "DET", "NOUN", "ADV", "VERB", "ADP", "ADJ", "NOUN", "PROPN", "SCONJ", "NOUN", "VERB", "DET", "NOUN", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PART", "NOUN", "NOUN", "AUX", "VERB", "DET", "NOUN", "ADP", "DET", "NOUN", "ADP", "PROPN", "PART", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "ADP", "VERB", "ADP", "DET", "NOUN", "ADV", "PUNCT", "PRON", "VERB", "VERB", "ADP", "PRON", "CCONJ", "DET", "NOUN", "VERB", "PRON", "PART", "VERB", "ADP", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "AUX", "PRON", "VERB", "ADP", "DET", "PROPN", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "NUM", "ADJ", "NOUN", "ADP", "PROPN", "PROPN", "ADP", "ADP", "ADJ", "ADJ", "NOUN", "ADP", "PROPN", "PUNCT", "VERB", "PROPN", "ADP", "PROPN", "ADP", "ADJ", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PRON", "AUX", "DET", "NOUN", "PROPN", "VERB", "DET", "NOUN", "ADP", "ADJ", "NOUN", "ADP", "PROPN", "PUNCT", "AUX", "PRON", "DET", "NOUN", "NOUN", "SYM", "NOUN", "NOUN", "PART", "VERB", "ADP", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["SPACE", "NOUN", "PUNCT", "VERB", "PART", "VERB", "NOUN", "ADP", "DET", "VERB", "NOUN", "ADP", "DET", "ADV", "VERB", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "ADJ", "NOUN", "ADP", "PROPN", "NOUN", "ADP", "DET", "NOUN", "ADP", "NUM", "ADJ", "NOUN", "ADP", "PROPN", "PUNCT", "VERB", "DET", "NOUN", "ADV"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NOUN", "VERB", "ADP", "NUM", "NOUN", "PUNCT", "NOUN", "CCONJ", "NOUN", "PUNCT", "PROPN", "PROPN"]}]], "clean": ["user can i get -pron- contact info", "user follow for the large network of journalist in ottawa algonquin journalism student supplement ottawa citize", "good bus driver on the right now -pron- feel like -pron- on a guide tour", "user -pron- feel honour say winner yousafzai", "liberal candidate for carleton mississippi mills user caign receive a overall accord to", "youtube be a new way of create consume medium ottawa have star of -pron- own check out -pron- piece in user", "user open for user to kick off orientation week at user user", "user user user c say -pron- too close to call in taylor only a slight lead on user", "user user a hustlin fella come by to talk about -pron- upcoming film and online audition", "user at least one person wound in shoot at national war memorial centre and east blocks on parl hill be lock down", "mark taylor lead in bay ward atvotes", "nervous crowd await official declaration of taylor as winner of bay ward -pron- only vote ahead of cullen", "user pedal with bombay bicycle club via user", "dom look so dash in -pron- bowtie for national dog day", "user power outage what -pron- know so far", "user user in november a great way to end the term", "user hey -pron- a journalist at gulf news cover the uk election be -pron- vote and have a minute for a quick chat", "user -pron- here stop by algonquin college to see -pron- face in user", "user user elected bay mark taylor", "user hi -pron- a journalist at gulf news in dubai cover the uk election have a minute for a chat", "valentine day date with user at cbc today", "user user all the dog pic please", "user not too late inbox -pron- -pron- number", "user find an unopened bag of mini egg in an old jacket -pron- a good day", "publish piece of trudeau at user", "user user user stop by user last week here -pron- coverage of -pron-", "user interview with at algonquin times", "user senator the talk of the town", "user -pron- do graduate last year back on the east coast now hope all be well with -pron-", "user a belate thank to user for profile -pron- new president in -pron- paper user", "user if -pron- plan on voting or not in the election", "first concert of the semester user user", "-pron- two favorite thing interview and makeup chat with user for the winter issue of user", "user thank for remember check -pron-", "thin margin between taylor and cullen in bay ward the room be even applaud", "user statement from premier paul davis", "user incumbent rick chiarelli have lead in college ward and mark taylor have the lead over alex cullen in bay", "user hey -pron- a journalist at gulf news cover the uk election do -pron- have a minute for a chat", "lot of support in the room for user", "if only -pron- could spend all the money -pron- invest into -pron- car on makeup instead", "user gander international airport", "user -pron- pronounce newfoundland like understand accord to -pron- friend who just shoot a movie there", "user do -pron- have to wait an hour in the phone queue to swap -pron- sim card or can -pron- do -pron- online", "user thank for all -pron- help", "user greet by cheer at papa sam in kanata", "prospective journalist -pron- a year ago would never believe -pron- use sedar on a daily basis", "algonquin lose application of two cuse in qatif saudi arabia president indicate deficit in jazan may have play a role user", "user hey a journalist at gulf news write about the upcoming uk election be -pron- vote by a minute for a quick chat", "bombay bicycle club stop by the user on check out -pron- story in the user this thurs", "user pick up again in ottawa tomorrow at user so stoke to be back on the road", "what algonquin new president user view on the saudi more about cheryl in the upcoming user", "some cool ottawa youtubers in the new issue of user out now user user user", "user -pron- a reporter work for metroland tonight will -pron- be around time out bar grill tonight for a few word after", "user be -pron- fashionable enough for dubai here be the most carry handbag in town", "user shoutout thank user feature -pron- in glue mag follow user for be awesome make -pron- happen h", "wait for user to arrive in bay ward -pron- win last year against longtime councilor alex cullen", "user -pron- piece in the user", "just sit down with user new president user -pron- look forward to mingle with the student user", "liberal candidate user vote behind pc maclaren", "user okay cool inbox -pron- -pron- number", "user thank for all -pron- help", "carleton mississippi mills liberal candidate user behind by vote riding have be pc for year", "user elected bay mark taylor", "user johnny cash son arrest in -pron- underwear at deer lake airport", "dear user can -pron- please make a user filter", "-pron- a real journalist meow right by the bridge in hfx", "user confirm that a transportation referendum be upcome see -pron- previous u pass story http", "-pron- have be to canadian tire twice this week ew", "user such a coincidence yes the online content go up today hope all be well with -pron-", "user dm -pron- -pron- need to ask -pron- a question", "the guy blare celine dion on duckworth st be -pron- soulmate", "vote separate taylor from cullen in bay ward", "user sexual harassment dominate headline via user", "this be -pron- first lesson in business class remember -pron- nothing but fake money user user", "poll predict pc jack maclaren the clear winner of", "user just compliment -pron- on -pron- shawl guess -pron- exude homeless chic today", "listen to omar khadr canadian lawyer talk user about -pron- treatment in guantanamo for user", "user hey -pron- a journalism student write a piece on youtubers in ottawa would -pron- be free for a chat", "user -pron- okay to be scare -pron- be here for -pron-", "taylor address the crowd after a tight race", "patiently wait on strangelove to call -pron- for a interview first question can -pron- summarize -pron- book on youtube in minute", "liberal candidate lead in", "user -pron- be a journalist in ottawa have a story w source about muslim discrimination by rcmp in st john interest in detail", "user hey -pron- a journalist at gulf news in dubai cover the uk election have a minute for a quick chat", "user thank for all -pron- help", "slut shaming need to stop -pron- column in the user", "user -pron- almost never use twitter for work but since -pron- launch the late news medium outlet in town", "watch the vote come in at rosalyn steven headquarters in kanata", "just send -pron- first interview request via instagram", "user breakfast meeting meet councillor phone call speak to j class at algonquin trustee dinner candlelight vi", "user the cat seem sufficiently out of the bag warm welcome to user the new addition to", "positive vibe of a job well do at liberal candidate user despite pc take the vote", "dubai fur industry be feel the heat in the wake of russia recession", "good part of work in the office alone -pron- can talk to -pron- and no one tell -pron- to shut up", "user be -pron- vote in the uk election", "user cancel more cuse in saudi arabia due to rocky first year in jazan read user on thurs for more", "user -pron- a journalist user write a piece about popular bag in dubai be there a sale rep communication dept to talk with", "user excite to welcome user to the grow newsroom at the newly rename", "user rough start in user lead to the cancellation of two new cuse in saudi read -pron- story here", "summer fun begin in two day vacation moving user user"]}