{"py/object": "data.Author", "author_id": "lh00crko7a3iom3im9i4cywgc9m7vic3", "truth": 1, "tweets": ["Cannabis proposals tackle New Mexico's irrigation issues, would add water protections - Las\u2026 #URL#", "'We can be quite optimistic' - McLaren boss Seidl happy with 2020 car: McLaren are hopeful\u2026 #URL#", "Two-time F1 champion Alonso 11th after Dakar Rally first stage: Two-time Formula 1 world\u2026 #URL#", "Colorado hopes to make cannabis industry more eco-friendly by recycling breweries\u2019 carbon\u2026 #URL#", "Formula 1: Max Verstappen and Red Bull hope to end Lewis Hamilton's F1 dominance: Red Bull\u2026 #URL#", "Struggling Portland cannabis company sells Canadian units in move to shore up finances\u2026 #URL#", "The Week In Cannabis: MedMen And Sundial Lose Their CEOs, Santa Cruz Gets Trippy And Much\u2026 #URL#", "Research Casts Doubt on Cannabis as a Reliable Pain and Insomnia Treatment - VICE #URL#", "1 Cannabis Stock to Avoid At All Costs - Motley Fool #URL#", "Cannabis use rising faster among depressed Americans - Reuters #URL#", "Dorsey Adds Industry Leader Sativa Rasmussen to Its Cannabis Team - Associated Press #URL#", "Formula 1's best moment of the decade: Jog your memory and then vote for your best moment\u2026 #URL#", "Darren McCarty cheers on Ann Arbor\u2019s Om of Medicine as recreational cannabis sales begin\u2026 #URL#", "Meet the cannabis chef leading a culinary revolution - BBC News #URL#", "New Mexico settles 2017 medical cannabis lawsuit for $69K - Washington Times #URL#", "3 Cannabis Stocks Set to Shock the Market - Nasdaq #URL#", "'The buzz is the same every year' - Hamilton still motivated with Mercedes: Six-time world\u2026 #URL#", "Formula 1: Ask chief F1 writer Andrew Benson your questions about new season: Drivers\u2026 #URL#", "How College Students Iron The Wrinkles In The Cannabis Industry - #URL# #URL#", "How Cannabis Can Interfere With And Disrupt Leukemia Cells - Benzinga #URL#", "'Our journey hasn't been easy' - Hamilton opens up about relationship with father: Lewis\u2026 #URL#", "Verstappen 'very positive' about new car after Red Bull test: Max Verstappen describes his\u2026 #URL#", "This Week\u2019s Top Cannabis News: Turbulence, Firings, Job Creation, And Loads Of Cash - Forbes #URL#", "F1 to raise money for Australian bushfires victims: Formula 1 is to hold an auction of\u2026 #URL#", "Ferrari sign Leclerc's brother Arthur to young driver programme: Charles Leclerc's 19-year\u2026 #URL#", "Chicago police say someone stole weed from a 'cannabis amnesty box' at Midway airport\u2026 #URL#", "Wyclef Jean Announces Cannabis Product Line With Cali Life - Rolling Stone #URL#", "'No blame' in Hubert fatal crash in Belgium: The death of F2 driver Anthoine Hubert at last\u2026 #URL#", "This Week in Weed: Treat your flu with cannabis", "Canberra women with endometriosis are self-medicating with cannabis, but legalising the\u2026 #URL#", "Partying this NYE? Watch your cannabis intake, police urge - #URL# #URL#", "Everything Wrong With The Cannabis Industry: Investors Beware - #URL# #URL#", "Twitter bots tout cannabis as a cure-all despite few approved medical uses - CNA #URL#", "Robert Kubica joins Alfa Romeo as reserve driver: Pole Robert Kubica, who drove for\u2026 #URL#", "Formula 1: Renault's Pat Fry set to start in new role: Pat Fry is to start work at Renault\u2026 #URL#", "Davos 2020: Can Formula 1 really go 'carbon neutral' by 2030?: Can Formula 1 motor racing\u2026 #URL#", "Lewis Hamilton and Mercedes the 'obvious pairing going forward', says Toto Wolff: Mercedes\u2026 #URL#", "Formula 1: Sean Bratches to leave commercial role: Formula 1 commercial boss Sean Bratches\u2026 #URL#", "Breckland Police seize 79 cannabis plants and make arrests in Thetford", "McLaren: Andrea Stella promoted in Andreas Seidl's three-pronged restructure: Andrea Stella\u2026 #URL#", "Cannabis demand Is high in Worth - Reporter Online #URL#", "Australian fires: Lewis Hamilton pledges more than \u00a3380,000 to aid fight against disaster\u2026 #URL#", "Ferrari F1 2020 launch: A grandiose launch for the SF1000 but can Ferrari stop Mercedes\u2026 #URL#", "Sir Jackie Stewart: F1 is hastening race to dementia cure: Formula 1's ability to find\u2026 #URL#", "CES 2020 hit by questions over its treatment of cannabis company - CNN #URL#", "Formula 1: Chadwick to continue Williams development role: W Series champion Jamie Chadwick\u2026 #URL#", "Coronavirus: Chinese Grand Prix expected to be postponed over virus fears: The Chinese\u2026 #URL#", "Man caught with cannabis said he had the drug because he had 'great difficulty sleeping\u2026 #URL#", "Keep Your Cannabis Stash Safe with a New App-Based Device - LoudCloudHealth #URL#", "Recreational cannabis purchasers line up in Morris - Morris Daily Herald #URL#", "Formula E cancels China race to further increase pressure on F1: The all-electric Formula E\u2026 #URL#", "Father, 33, who took cannabis oil to prolong his life after being diagnosed with a brain\u2026 #URL#", "Charles Leclerc: I won't crash with Ferrari team-mate Sebastian Vettel again: Ferrari's\u2026 #URL#", "Australia bushfires: F1 monitoring fires before start of new season: Formula 1 says it is\u2026 #URL#", "Missouri Chooses Its Medical Cannabis Growers - HempGazette #URL#", "Chinese Grand Prix: Red Bull boss Christian Horner 'trusts' F1 bosses over coronavirus\u2026 #URL#", "Formula 1 2020 car launch &amp; testing schedule: Your guide to the key dates for pre-season\u2026 #URL#", "Long Beach Lowers Cannabis Taxes - Benzinga #URL#", "Shameful number of drug drivers pulled over on cocaine and cannabis - Liverpool Echo #URL#", "Nevada closes pot test lab, issues cannabis product warning - San Francisco Chronicle #URL#", "Cannabis startup pulls out of CES tech show amid limits - Washington Post #URL#", "Cannabis Industry: 2020 Predictions - Forbes #URL#", "2020 Predictions from Cannabis Industry Experts: More Insurance Business - Insurance Journal #URL#", "Cooking with Cannabis in a \u201cFar Out FoodTime\u201d - WGN Radio - Chicago #URL#", "Alpha Tauri: Red Bull's former junior team Toro Rosso is rebranded for 2020: Red Bull's\u2026 #URL#", "Report: Halt urged for new cannabis biz permits - Bay Area Reporter, America's highest\u2026 #URL#", "More Than $2.2 Million in Legal Cannabis Sold on Second Day in Illinois, State Says - NBC\u2026 #URL#", "Chinese Grand Prix in doubt as Shanghai suspends events: Sports authorities in Shanghai\u2026 #URL#", "F1 'monitoring coronavirus' outbreak in China: Formula 1 \"monitoring\" the effects of the\u2026 #URL#", "Racing Point to be rebranded as Aston Martin after Stroll rescue deal: Racing Point F1 team\u2026 #URL#", "payment provider allegedly owes millions to dispensaries - Marijuana Business Daily #URL#", "Renault need to regain confidence, says team boss: Renault need to \"regain confidence\" this\u2026 #URL#", "From French Laundry To Cannabis: Aaron Keefer Lands At Sonoma Hills Farm - Forbes #URL#", "Lewis Hamilton yet to talk to Mercedes over contract: Lewis Hamilton says he is yet to\u2026 #URL#", "Nextleaf Completes Acquisition Of Water-Soluble Tech For Cannabis Beverages - Benzinga #URL#", "Hamilton has weak points others do not exploit - Alonso: Lewis Hamilton has \"raised his\u2026 #URL#", "Formula 1: W Series to be undercard at two races in 2020: The female-only W Series is set\u2026 #URL#", "Cannabis Companies, Veteran Organizations Team Up To Combat Suicide And Overdose Among Vets\u2026 #URL#", "Haas unveil new VF-20 car for 2020 Formula 1 season: US-based Haas become the first Formula\u2026 #URL#", "Miami Grand Prix: Formula 1 makes further changes to plans for Florida race: Formula 1\u2026 #URL#", "Watch Mitch McConnell Frolic In A Field Of Cannabis - Forbes #URL#", "Dakar Rally challenge is 'biggest of my career' - two-time F1 champion Alonso: Two-time\u2026 #URL#", "This Cannabis Entrepreneur Says He\u2019s First In The Industry To Use NFC Tags And That All\u2026 #URL#", "We've approached cannabis edibles backwards: High Society - The GrowthOp #URL#", "Cannabis Conclave Returning To Davos: Meet Benzinga At The Event - Benzinga #URL#", "Ratcliffe expects Hamilton to stay with Mercedes: Britain's richest man Sir Jim Ratcliffe\u2026 #URL#", "Christmas Eve visit leads police to cannabis - Western Telegraph #URL#", "Roy Nissany: Williams name Israeli as Formula 1 test driver: Israeli Roy Nissany is named\u2026 #URL#", "Formula 1: Williams sign Aitken as reserve driver: Briton Jack Aitken has joined Williams\u2026 #URL#", "I can beat Hamilton in the right car - Verstappen: Red Bull's Max Verstappen says he can\u2026 #URL#", "Colorado pot shops turn to highway sponsor signs amid strict ad rules on advertising\u2026 #URL#", "5 cannabis strains for people who love strawberries - Leafly #URL#", "This Colorado college will start offering a cannabis major in the fall - CNN #URL#", "Cannabis industry heads to Davos as stocks rebound - Financial Post #URL#", "Illegal cannabis oil for sale... at Holland and Barrett - Daily Mail #URL#", "Tolerance Complicates Sleep Benefit From Medical Cannabis Among Patients With Chronic Pain\u2026 #URL#", "Radient Technologies, Shoppers Drug Mart Partner On Exclusive Medical Cannabis Brand\u2026 #URL#", "Illinois Dispensaries Sold Nearly $40 Million Worth of Cannabis in January, State Says\u2026 #URL#", "Kubica to race in German Touring Car Championship: Former Formula 1 driver Robert Kubica is\u2026 #URL#", "Cura Cannabis will pay record penalty for \u2018dishonest conduct,\u2019 misrepresenting marijuana\u2026 #URL#"], "ents": [[{"py/tuple": ["Cannabis", "ORG"]}, {"py/tuple": ["New Mexico's", "GPE"]}], [{"py/tuple": ["2020", "CARDINAL"]}, {"py/tuple": ["McLaren", "ORG"]}], [{"py/tuple": ["Two", "CARDINAL"]}, {"py/tuple": ["Alonso 11th", "ORG"]}, {"py/tuple": ["Dakar", "NORP"]}, {"py/tuple": ["Two", "CARDINAL"]}, {"py/tuple": ["Formula 1", "FAC"]}], [{"py/tuple": ["Colorado", "GPE"]}], [{"py/tuple": ["Formula 1", "PERSON"]}, {"py/tuple": ["Max Verstappen", "PERSON"]}, {"py/tuple": ["Red Bull", "PERSON"]}, {"py/tuple": ["Lewis Hamilton's", "PERSON"]}, {"py/tuple": ["F1", "PRODUCT"]}, {"py/tuple": ["Red Bull", "PERSON"]}], [{"py/tuple": ["Portland", "ORG"]}, {"py/tuple": ["Canadian", "NORP"]}], [{"py/tuple": ["The Week", "DATE"]}, {"py/tuple": ["Santa Cruz", "GPE"]}], [{"py/tuple": ["Cannabis", "ORG"]}], [{"py/tuple": ["1", "CARDINAL"]}, {"py/tuple": ["Cannabis Stock", "ORG"]}], [{"py/tuple": ["Americans", "NORP"]}], [{"py/tuple": ["Sativa Rasmussen", "PERSON"]}], [{"py/tuple": ["Formula 1's", "PERSON"]}, {"py/tuple": ["the decade", "DATE"]}, {"py/tuple": ["Jog", "PERSON"]}], [{"py/tuple": ["Darren McCarty", "PERSON"]}, {"py/tuple": ["Ann Arbor\u2019s", "PERSON"]}], [], [{"py/tuple": ["New Mexico", "GPE"]}, {"py/tuple": ["2017", "CARDINAL"]}, {"py/tuple": ["69", "MONEY"]}, {"py/tuple": ["K - Washington Times", "ORG"]}], [{"py/tuple": ["3", "CARDINAL"]}, {"py/tuple": ["Cannabis", "ORG"]}], [{"py/tuple": ["the same every year", "DATE"]}, {"py/tuple": ["Hamilton", "PERSON"]}, {"py/tuple": ["Mercedes", "ORG"]}, {"py/tuple": ["Six", "CARDINAL"]}], [{"py/tuple": ["Formula 1", "PERSON"]}, {"py/tuple": ["Andrew Benson", "PERSON"]}], [], [], [{"py/tuple": ["Hamilton", "PERSON"]}, {"py/tuple": ["Lewis", "PERSON"]}], [{"py/tuple": ["Red Bull", "ORG"]}, {"py/tuple": ["Max Verstappen", "PERSON"]}], [{"py/tuple": ["This Week", "DATE"]}], [{"py/tuple": ["Australian", "NORP"]}, {"py/tuple": ["Formula 1", "PERSON"]}], [{"py/tuple": ["Ferrari", "ORG"]}, {"py/tuple": ["Leclerc", "ORG"]}, {"py/tuple": ["Arthur", "PERSON"]}, {"py/tuple": ["Charles Leclerc's", "PERSON"]}], [{"py/tuple": ["Chicago", "GPE"]}, {"py/tuple": ["Midway airport", "FAC"]}], [{"py/tuple": ["Wyclef Jean Announces Cannabis Product Line With Cali Life - Rolling Stone", "ORG"]}], [{"py/tuple": ["Hubert", "GPE"]}, {"py/tuple": ["Belgium", "GPE"]}, {"py/tuple": ["Anthoine Hubert", "PERSON"]}], [{"py/tuple": ["This Week", "DATE"]}, {"py/tuple": ["Weed", "PERSON"]}], [{"py/tuple": ["Canberra", "GPE"]}], [{"py/tuple": ["NYE", "ORG"]}], [], [], [{"py/tuple": ["Robert Kubica", "PERSON"]}, {"py/tuple": ["Alfa Romeo", "PERSON"]}, {"py/tuple": ["Pole Robert Kubica", "PERSON"]}], [{"py/tuple": ["Formula 1", "PERSON"]}, {"py/tuple": ["Renault", "ORG"]}, {"py/tuple": ["Pat Fry", "PERSON"]}, {"py/tuple": ["Pat Fry", "PERSON"]}, {"py/tuple": ["Renault", "ORG"]}], [{"py/tuple": ["2030", "CARDINAL"]}], [{"py/tuple": ["Lewis Hamilton", "PERSON"]}, {"py/tuple": ["Mercedes", "ORG"]}, {"py/tuple": ["Toto Wolff", "PERSON"]}, {"py/tuple": ["Mercedes", "ORG"]}], [{"py/tuple": ["Formula 1", "PERSON"]}, {"py/tuple": ["Sean Bratches", "PERSON"]}, {"py/tuple": ["Formula 1", "PERSON"]}, {"py/tuple": ["Sean", "NORP"]}], [{"py/tuple": ["Breckland Police", "ORG"]}, {"py/tuple": ["79", "CARDINAL"]}, {"py/tuple": ["Thetford", "GPE"]}], [{"py/tuple": ["McLaren", "ORG"]}, {"py/tuple": ["Andrea Stella", "PERSON"]}, {"py/tuple": ["Andreas Seidl's", "ORG"]}, {"py/tuple": ["three", "CARDINAL"]}, {"py/tuple": ["Andrea Stella", "PERSON"]}], [{"py/tuple": ["Cannabis", "ORG"]}], [{"py/tuple": ["Australian", "NORP"]}, {"py/tuple": ["Lewis Hamilton", "PERSON"]}, {"py/tuple": ["more than \u00a3380,000", "MONEY"]}], [{"py/tuple": ["Ferrari", "ORG"]}, {"py/tuple": ["2020", "CARDINAL"]}, {"py/tuple": ["SF1000", "PRODUCT"]}, {"py/tuple": ["Ferrari", "ORG"]}, {"py/tuple": ["Mercedes", "ORG"]}], [{"py/tuple": ["Jackie Stewart", "PERSON"]}, {"py/tuple": ["Formula 1's", "PERSON"]}], [{"py/tuple": ["2020", "DATE"]}, {"py/tuple": ["CNN", "ORG"]}], [{"py/tuple": ["Formula 1", "PERSON"]}, {"py/tuple": ["Williams", "PERSON"]}, {"py/tuple": ["Jamie Chadwick", "PERSON"]}], [{"py/tuple": ["Chinese Grand Prix", "ORG"]}, {"py/tuple": ["Chinese", "NORP"]}], [{"py/tuple": ["cannabis", "ORG"]}], [{"py/tuple": ["New App", "GPE"]}], [{"py/tuple": ["Morris - Morris Daily Herald", "ORG"]}], [{"py/tuple": ["Formula E", "PERSON"]}, {"py/tuple": ["China", "GPE"]}, {"py/tuple": ["Formula", "PERSON"]}], [{"py/tuple": ["33", "DATE"]}], [{"py/tuple": ["Charles Leclerc", "PERSON"]}, {"py/tuple": ["Ferrari", "ORG"]}, {"py/tuple": ["Sebastian", "NORP"]}, {"py/tuple": ["Ferrari", "ORG"]}], [{"py/tuple": ["Australia", "GPE"]}, {"py/tuple": ["Formula 1", "PERSON"]}], [{"py/tuple": ["Missouri", "GPE"]}], [{"py/tuple": ["Chinese", "NORP"]}, {"py/tuple": ["Red Bull", "FAC"]}, {"py/tuple": ["Christian", "NORP"]}, {"py/tuple": ["F1", "PRODUCT"]}], [{"py/tuple": ["Formula 1", "PERSON"]}, {"py/tuple": ["2020", "CARDINAL"]}, {"py/tuple": ["pre-season", "DATE"]}], [{"py/tuple": ["Long Beach Lowers Cannabis Taxes - Benzinga", "ORG"]}], [], [{"py/tuple": ["Nevada", "GPE"]}], [{"py/tuple": ["Cannabis", "ORG"]}, {"py/tuple": ["Washington Post", "ORG"]}], [{"py/tuple": ["2020", "CARDINAL"]}], [{"py/tuple": ["2020", "CARDINAL"]}], [{"py/tuple": ["Cannabis", "ORG"]}, {"py/tuple": ["Far Out FoodTime", "WORK_OF_ART"]}], [{"py/tuple": ["Red Bull's", "ORG"]}, {"py/tuple": ["Toro Rosso", "PERSON"]}, {"py/tuple": ["2020", "DATE"]}, {"py/tuple": ["Red Bull's", "ORG"]}], [{"py/tuple": ["America", "GPE"]}], [{"py/tuple": ["$2.2 Million", "MONEY"]}, {"py/tuple": ["Second Day", "DATE"]}, {"py/tuple": ["Illinois", "GPE"]}], [{"py/tuple": ["Chinese", "NORP"]}, {"py/tuple": ["Shanghai", "GPE"]}, {"py/tuple": ["Shanghai", "GPE"]}], [{"py/tuple": ["China", "GPE"]}, {"py/tuple": ["Formula 1", "PERSON"]}], [{"py/tuple": ["Aston Martin", "PERSON"]}, {"py/tuple": ["Stroll", "ORG"]}, {"py/tuple": ["Racing Point F1", "ORG"]}], [{"py/tuple": ["millions", "CARDINAL"]}, {"py/tuple": ["Marijuana Business Daily", "ORG"]}], [{"py/tuple": ["Renault", "ORG"]}, {"py/tuple": ["Renault", "ORG"]}], [{"py/tuple": ["French", "NORP"]}, {"py/tuple": ["Aaron Keefer", "PERSON"]}, {"py/tuple": ["Sonoma Hills Farm - Forbes", "ORG"]}], [{"py/tuple": ["Lewis Hamilton", "PERSON"]}, {"py/tuple": ["Mercedes", "ORG"]}, {"py/tuple": ["Lewis Hamilton", "PERSON"]}], [], [{"py/tuple": ["Hamilton", "PERSON"]}, {"py/tuple": ["Lewis Hamilton", "PERSON"]}], [{"py/tuple": ["Formula 1", "PERSON"]}, {"py/tuple": ["two", "CARDINAL"]}, {"py/tuple": ["2020", "CARDINAL"]}], [{"py/tuple": ["Cannabis Companies", "PERSON"]}], [{"py/tuple": ["Haas unveil new", "ORG"]}, {"py/tuple": ["2020", "DATE"]}, {"py/tuple": ["Formula 1", "PERSON"]}, {"py/tuple": ["US", "GPE"]}, {"py/tuple": ["Haas", "ORG"]}, {"py/tuple": ["first", "ORDINAL"]}, {"py/tuple": ["Formula", "PERSON"]}], [{"py/tuple": ["Miami", "GPE"]}, {"py/tuple": ["Formula 1", "PERSON"]}, {"py/tuple": ["Florida", "GPE"]}, {"py/tuple": ["Formula 1", "PERSON"]}], [], [{"py/tuple": ["Dakar Rally", "ORG"]}, {"py/tuple": ["two", "CARDINAL"]}, {"py/tuple": ["Alonso", "PERSON"]}, {"py/tuple": ["Two", "CARDINAL"]}], [{"py/tuple": ["This Cannabis Entrepreneur Says He", "ORG"]}, {"py/tuple": ["First", "ORDINAL"]}], [], [{"py/tuple": ["Cannabis Conclave Returning", "PERSON"]}], [{"py/tuple": ["Ratcliffe", "ORG"]}, {"py/tuple": ["Hamilton", "PERSON"]}, {"py/tuple": ["Mercedes", "ORG"]}, {"py/tuple": ["Britain", "GPE"]}, {"py/tuple": ["Jim Ratcliffe", "PERSON"]}], [], [{"py/tuple": ["Roy Nissany", "ORG"]}, {"py/tuple": ["Williams", "PERSON"]}, {"py/tuple": ["Israeli", "NORP"]}, {"py/tuple": ["Formula 1", "PERSON"]}, {"py/tuple": ["Israeli Roy Nissany", "ORG"]}], [{"py/tuple": ["Formula 1", "PERSON"]}, {"py/tuple": ["Williams", "PERSON"]}, {"py/tuple": ["Briton Jack Aitken", "PERSON"]}, {"py/tuple": ["Williams", "PERSON"]}], [{"py/tuple": ["Hamilton", "PERSON"]}, {"py/tuple": ["Red Bull's", "ORG"]}, {"py/tuple": ["Max Verstappen", "PERSON"]}], [{"py/tuple": ["Colorado", "GPE"]}], [{"py/tuple": ["5", "CARDINAL"]}], [{"py/tuple": ["Colorado", "GPE"]}], [{"py/tuple": ["Cannabis", "ORG"]}, {"py/tuple": ["Davos", "ORG"]}, {"py/tuple": ["Financial Post", "ORG"]}], [{"py/tuple": ["Holland", "GPE"]}, {"py/tuple": ["Barrett - Daily Mail", "ORG"]}], [], [{"py/tuple": ["Radient Technologies", "ORG"]}, {"py/tuple": ["Shoppers Drug Mart", "ORG"]}], [{"py/tuple": ["Illinois Dispensaries Sold", "ORG"]}, {"py/tuple": ["Nearly $40 Million", "MONEY"]}, {"py/tuple": ["Cannabis", "ORG"]}, {"py/tuple": ["January", "DATE"]}, {"py/tuple": ["State", "ORG"]}], [{"py/tuple": ["Kubica", "GPE"]}, {"py/tuple": ["German", "NORP"]}, {"py/tuple": ["Formula 1", "PERSON"]}, {"py/tuple": ["Robert Kubica", "PERSON"]}], [{"py/tuple": ["Cura Cannabis", "PERSON"]}, {"py/tuple": ["marijuana", "GPE"]}]], "POS_tags": [[{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NOUN", "VERB", "PROPN", "PROPN", "PART", "NOUN", "NOUN", "PUNCT", "VERB", "VERB", "NOUN", "NOUN", "PUNCT", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PUNCT", "PRON", "VERB", "AUX", "ADV", "ADJ", "PUNCT", "PUNCT", "PROPN", "NOUN", "PROPN", "ADJ", "ADP", "NUM", "NOUN", "PUNCT", "PROPN", "AUX", "ADJ", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NUM", "PUNCT", "NOUN", "PROPN", "NOUN", "PROPN", "NOUN", "ADP", "PROPN", "PROPN", "ADJ", "NOUN", "PUNCT", "NUM", "PUNCT", "NOUN", "PROPN", "NUM", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "PART", "VERB", "NOUN", "NOUN", "ADJ", "NOUN", "PUNCT", "ADJ", "ADP", "VERB", "NOUN", "PUNCT", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NUM", "PUNCT", "PROPN", "PROPN", "CCONJ", "PROPN", "PROPN", "VERB", "PART", "VERB", "PROPN", "PROPN", "PART", "PROPN", "NOUN", "PUNCT", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "PROPN", "VERB", "NOUN", "VERB", "ADJ", "NOUN", "ADP", "NOUN", "PART", "VERB", "ADP", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "PROPN", "ADP", "PROPN", "PUNCT", "PROPN", "CCONJ", "PROPN", "PROPN", "DET", "NOUN", "PUNCT", "PROPN", "PROPN", "VERB", "PROPN", "CCONJ", "ADJ", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "PROPN", "VERB", "ADP", "PROPN", "SCONJ", "DET", "PROPN", "PROPN", "CCONJ", "PROPN", "PROPN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["NUM", "PROPN", "PROPN", "PART", "VERB", "ADP", "DET", "PROPN", "PUNCT", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "VERB", "VERB", "ADV", "ADP", "ADJ", "PROPN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "PROPN", "PROPN", "PROPN", "PROPN", "ADP", "DET", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "NUM", "PART", "ADJ", "NOUN", "ADP", "DET", "NOUN", "PUNCT", "VERB", "DET", "NOUN", "CCONJ", "ADV", "VERB", "ADP", "DET", "ADJ", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "NOUN", "ADP", "PROPN", "PROPN", "PUNCT", "PROPN", "ADP", "PROPN", "SCONJ", "ADJ", "NOUN", "NOUN", "VERB", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "DET", "NOUN", "NOUN", "VERB", "DET", "ADJ", "NOUN", "PUNCT", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "VERB", "NUM", "PROPN", "PROPN", "NOUN", "ADP", "SYM", "NUM", "PROPN", "PUNCT", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["X", "PROPN", "NOUN", "VERB", "PART", "VERB", "DET", "PROPN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PUNCT", "DET", "NOUN", "AUX", "DET", "ADJ", "DET", "NOUN", "PUNCT", "PUNCT", "PROPN", "ADV", "VERB", "ADP", "PROPN", "PUNCT", "NUM", "PUNCT", "NOUN", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NUM", "PUNCT", "VERB", "ADJ", "NOUN", "NOUN", "PROPN", "PROPN", "DET", "NOUN", "ADP", "ADJ", "NOUN", "PUNCT", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PROPN", "PROPN", "PROPN", "DET", "PROPN", "ADP", "DET", "PROPN", "PROPN", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "NOUN", "VERB", "VERB", "ADP", "CCONJ", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PUNCT", "DET", "NOUN", "AUX", "PART", "AUX", "ADJ", "PUNCT", "PUNCT", "PROPN", "VERB", "ADP", "ADP", "NOUN", "ADP", "NOUN", "PUNCT", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PUNCT", "ADV", "ADJ", "PUNCT", "ADP", "ADJ", "NOUN", "ADP", "PROPN", "PROPN", "NOUN", "PUNCT", "PROPN", "PROPN", "VERB", "DET", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "PART", "PROPN", "PROPN", "PROPN", "PUNCT", "NOUN", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "PUNCT", "CCONJ", "PROPN", "ADP", "PROPN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PART", "VERB", "NOUN", "ADP", "ADJ", "NOUN", "NOUN", "PUNCT", "PROPN", "NUM", "AUX", "PART", "VERB", "DET", "NOUN", "ADP", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "NOUN", "PROPN", "PART", "NOUN", "PROPN", "ADP", "ADJ", "NOUN", "NOUN", "PUNCT", "PROPN", "PROPN", "PART", "NUM", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "NOUN", "VERB", "PRON", "VERB", "NOUN", "ADP", "DET", "PUNCT", "NOUN", "PROPN", "PROPN", "PUNCT", "ADP", "PROPN", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "NOUN", "ADP", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PUNCT", "DET", "NOUN", "PUNCT", "ADP", "ADJ", "ADJ", "NOUN", "ADP", "PROPN", "PUNCT", "DET", "NOUN", "ADP", "NOUN", "NOUN", "PROPN", "PROPN", "ADP", "ADJ", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "PROPN", "ADP", "PROPN", "PUNCT", "VERB", "DET", "NOUN", "ADP", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "NOUN", "ADP", "NOUN", "AUX", "NOUN", "PUNCT", "VERB", "ADP", "NOUN", "PUNCT", "CCONJ", "VERB", "DET", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "DET", "PROPN", "PUNCT", "VERB", "DET", "NOUN", "NOUN", "PUNCT", "NOUN", "NOUN", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "ADJ", "ADP", "DET", "PROPN", "NOUN", "PUNCT", "PROPN", "PROPN", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NOUN", "VERB", "NOUN", "SCONJ", "DET", "NOUN", "PUNCT", "NOUN", "SCONJ", "ADJ", "VERB", "ADJ", "NOUN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "VERB", "PROPN", "PROPN", "SCONJ", "NOUN", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "PRON", "VERB", "ADP", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NUM", "PUNCT", "PROPN", "PART", "PROPN", "PROPN", "NOUN", "PART", "VERB", "ADP", "ADJ", "NOUN", "PUNCT", "PROPN", "PROPN", "AUX", "PART", "VERB", "NOUN", "ADP", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "NUM", "PUNCT", "VERB", "NOUN", "NUM", "ADV", "VERB", "PUNCT", "NOUN", "ADJ", "PUNCT", "ADP", "NUM", "PUNCT", "PUNCT", "VERB", "NOUN", "NUM", "NOUN", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "CCONJ", "PROPN", "DET", "PUNCT", "ADJ", "NOUN", "VERB", "ADV", "PUNCT", "PUNCT", "VERB", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NUM", "PUNCT", "PROPN", "PROPN", "PART", "VERB", "ADJ", "NOUN", "PUNCT", "NOUN", "NUM", "ADJ", "NOUN", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "VERB", "NUM", "NOUN", "NOUN", "CCONJ", "VERB", "NOUN", "ADP", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PUNCT", "PROPN", "PROPN", "VERB", "ADP", "PROPN", "PROPN", "PART", "NUM", "PUNCT", "ADJ", "NOUN", "PUNCT", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NOUN", "AUX", "ADJ", "ADP", "ADJ", "PUNCT", "NOUN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "PUNCT", "PROPN", "PROPN", "VERB", "ADJ", "SCONJ", "SYM", "NUM", "PART", "VERB", "NOUN", "ADP", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "NUM", "NOUN", "PUNCT", "DET", "ADJ", "NOUN", "ADP", "DET", "NOUN", "CCONJ", "VERB", "PROPN", "VERB", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "AUX", "VERB", "NOUN", "ADP", "VERB", "NOUN", "PUNCT", "PROPN", "NUM", "PART", "NOUN", "PART", "VERB", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NUM", "VERB", "ADP", "NOUN", "ADP", "DET", "NOUN", "ADP", "NOUN", "NOUN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NUM", "PUNCT", "VERB", "PART", "VERB", "PROPN", "NOUN", "NOUN", "PUNCT", "PROPN", "PROPN", "NOUN", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "VERB", "PART", "AUX", "VERB", "ADP", "NOUN", "NOUN", "PUNCT", "DET", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "VERB", "ADP", "NOUN", "VERB", "PRON", "AUX", "DET", "NOUN", "SCONJ", "PRON", "AUX", "PUNCT", "ADJ", "NOUN", "VERB", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "DET", "NOUN", "NOUN", "PROPN", "ADP", "DET", "PROPN", "PROPN", "PUNCT", "VERB", "PROPN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "NOUN", "VERB", "ADP", "ADP", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NOUN", "VERB", "PROPN", "NOUN", "PART", "ADV", "VERB", "NOUN", "ADP", "PROPN", "PUNCT", "DET", "ADV", "PUNCT", "ADJ", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PUNCT", "NUM", "PUNCT", "PRON", "VERB", "NOUN", "NOUN", "PART", "VERB", "DET", "NOUN", "ADP", "AUX", "VERB", "ADP", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PUNCT", "PRON", "VERB", "PART", "VERB", "ADP", "ADJ", "NOUN", "PUNCT", "NOUN", "PROPN", "PROPN", "ADV", "PUNCT", "PROPN", "PART", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "NOUN", "PUNCT", "NOUN", "NOUN", "NOUN", "ADP", "NOUN", "ADP", "ADJ", "NOUN", "PUNCT", "PROPN", "NUM", "VERB", "PRON", "AUX", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "DET", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "NOUN", "PROPN", "PROPN", "PART", "NOUN", "PART", "NOUN", "NOUN", "ADP", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NUM", "NUM", "NOUN", "NOUN", "PUNCT", "NOUN", "NOUN", "PUNCT", "DET", "NOUN", "ADP", "DET", "ADJ", "NOUN", "ADP", "ADJ", "NOUN", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "ADP", "NOUN", "NOUN", "VERB", "ADP", "ADP", "NOUN", "CCONJ", "NOUN", "PUNCT", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "NOUN", "NOUN", "NOUN", "PUNCT", "NOUN", "VERB", "NOUN", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "NOUN", "VERB", "SCONJ", "ADP", "PROPN", "NOUN", "NOUN", "ADP", "NOUN", "PUNCT", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "NOUN", "PUNCT", "NUM", "PROPN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["NUM", "NOUN", "ADP", "PROPN", "PROPN", "PROPN", "PUNCT", "ADJ", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "ADP", "PROPN", "ADP", "DET", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "PUNCT", "PROPN", "PROPN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PART", "ADJ", "ADJ", "NOUN", "PROPN", "PROPN", "AUX", "VERB", "ADP", "NUM", "PUNCT", "PROPN", "PROPN", "PART", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "PUNCT", "NOUN", "VERB", "ADP", "ADJ", "NOUN", "NOUN", "VERB", "PUNCT", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PART", "ADJ", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "SCONJ", "SYM", "NUM", "NUM", "ADP", "PROPN", "PROPN", "VERB", "ADP", "PROPN", "PROPN", "ADP", "PROPN", "PUNCT", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PROPN", "ADP", "NOUN", "SCONJ", "PROPN", "VERB", "NOUN", "PUNCT", "NOUN", "NOUN", "ADP", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PUNCT", "VERB", "PROPN", "PART", "NOUN", "ADP", "PROPN", "PUNCT", "PROPN", "NUM", "PUNCT", "NOUN", "PUNCT", "DET", "NOUN", "ADP", "DET", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "PROPN", "PART", "AUX", "VERB", "SCONJ", "PROPN", "PROPN", "ADP", "PROPN", "NOUN", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NOUN", "ADV", "VERB", "NOUN", "ADP", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "PART", "VERB", "NOUN", "PUNCT", "VERB", "NOUN", "NOUN", "PUNCT", "PROPN", "VERB", "PART", "PUNCT", "VERB", "NOUN", "PUNCT", "DET", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADP", "ADJ", "PROPN", "ADP", "PROPN", "PUNCT", "PROPN", "PROPN", "VERB", "ADP", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "ADV", "PART", "VERB", "ADP", "PROPN", "ADP", "NOUN", "PUNCT", "PROPN", "PROPN", "VERB", "PRON", "AUX", "ADV", "PART", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PROPN", "ADP", "PROPN", "PUNCT", "PROPN", "NOUN", "ADP", "PROPN", "PROPN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "AUX", "ADJ", "NOUN", "NOUN", "AUX", "PART", "VERB", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "AUX", "PUNCT", "VERB", "DET", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NUM", "PUNCT", "PROPN", "PROPN", "PART", "AUX", "ADV", "ADP", "NUM", "NOUN", "ADP", "NUM", "PUNCT", "DET", "NOUN", "PUNCT", "ADV", "PROPN", "PROPN", "AUX", "VERB", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "ADP", "ADP", "PROPN", "PROPN", "CCONJ", "PROPN", "ADP", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "ADJ", "PROPN", "NOUN", "ADP", "NUM", "NOUN", "NUM", "NOUN", "PUNCT", "PROPN", "PUNCT", "VERB", "PROPN", "VERB", "DET", "ADJ", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "NUM", "VERB", "ADJ", "NOUN", "ADP", "NOUN", "ADP", "PROPN", "NOUN", "PUNCT", "NOUN", "NUM", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PROPN", "PROPN", "ADP", "DET", "PROPN", "ADP", "PROPN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "NOUN", "AUX", "PUNCT", "ADJ", "ADP", "DET", "NOUN", "PUNCT", "PUNCT", "NUM", "PUNCT", "NOUN", "PROPN", "NOUN", "PROPN", "PUNCT", "NUM", "PUNCT", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "PROPN", "PROPN", "VERB", "PRON", "VERB", "ADV", "ADP", "DET", "NOUN", "PART", "VERB", "PROPN", "PROPN", "CCONJ", "SCONJ", "DET", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "AUX", "VERB", "NOUN", "NOUN", "ADV", "PUNCT", "ADJ", "PROPN", "PUNCT", "DET", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "VERB", "VERB", "ADP", "PROPN", "PUNCT", "PROPN", "PROPN", "ADP", "DET", "PROPN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "PROPN", "PART", "VERB", "ADP", "PROPN", "PUNCT", "PROPN", "PART", "ADJ", "NOUN", "PROPN", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "NOUN", "VERB", "NOUN", "ADP", "NOUN", "PUNCT", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PUNCT", "PROPN", "NOUN", "PROPN", "SCONJ", "PROPN", "NUM", "NOUN", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "AUX", "VERB", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NUM", "PUNCT", "PROPN", "NOUN", "PROPN", "SCONJ", "NOUN", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "AUX", "VERB", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "VERB", "VERB", "PROPN", "ADP", "DET", "ADJ", "NOUN", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "PART", "PROPN", "PROPN", "VERB", "PRON", "VERB", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "NOUN", "NOUN", "VERB", "ADP", "NOUN", "NOUN", "NOUN", "ADP", "ADJ", "NOUN", "NOUN", "ADP", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NUM", "PROPN", "NOUN", "ADP", "NOUN", "PRON", "VERB", "NOUN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "PROPN", "NOUN", "VERB", "VERB", "VERB", "DET", "NOUN", "NOUN", "ADP", "DET", "NOUN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NOUN", "NOUN", "ADP", "PROPN", "SCONJ", "NOUN", "VERB", "PUNCT", "ADJ", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "NOUN", "ADP", "NOUN", "PUNCT", "ADP", "PROPN", "CCONJ", "PROPN", "PUNCT", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "VERB", "PROPN", "ADP", "PROPN", "PROPN", "ADP", "NOUN", "ADP", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "ADP", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "VERB", "ADV", "SYM", "NUM", "NUM", "PROPN", "ADP", "PROPN", "ADP", "PROPN", "PUNCT", "PROPN", "VERB", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PART", "NOUN", "ADP", "ADJ", "PROPN", "NOUN", "NOUN", "PUNCT", "ADJ", "PROPN", "NUM", "NOUN", "PROPN", "PROPN", "AUX", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "VERB", "VERB", "NOUN", "NOUN", "ADP", "PUNCT", "ADJ", "NOUN", "PUNCT", "PUNCT", "VERB", "PROPN", "PUNCT"]}]], "clean": ["cannabis proposal tackle new mexico irrigation issue would add water protection las", "-pron- can be quite optimistic mclaren boss seidl happy with car mclaren be hopeful", "two time chion alonso after dakar rally first stage two time formula world", "colorado hope to make cannabis industry more eco friendly by recycle brewery carbon", "formula max verstappen and red bull hope to end lewis hamilton dominance red bull", "struggle portland cannabi company sell canadian unit in move to shore up finance", "the week in cannabis medmen and sundial lose -pron- ceo santa cruz get trippy and much", "research casts doubt on cannabis as a reliable pain and insomnia treatment vice", "cannabis stock to avoid at all costs motley fool", "cannabis use rise faster among depressed americans reuters", "dorsey add industry leader sativa rasmussen to -pron- cannabis team associated press", "formula good moment of the decade jog -pron- memory and then vote for -pron- good moment", "darren mccarty cheer on ann arbor om of medicine as recreational cannabis sale begin", "meet the cannabis chef lead a culinary revolution bbc news", "new mexico settle medical cannabis lawsuit for k washington times", "cannabis stock set to shock the market nasdaq", "the buzz be the same every year hamilton still motivate with mercedes six time world", "formula ask chief writer andrew benson -pron- question about new season driver", "how college students iron the wrinkles in the cannabis industry", "how cannabis can interfere with and disrupt leukemia cells benzinga", "-pron- journey have be easy hamilton open up about relationship with father lewis", "verstappen very positive about new car after red bull test max verstappen describe -pron-", "this week top cannabis news turbulence firings job creation and loads of cash forbes", "to raise money for australian bushfire victim formula be to hold an auction of", "ferrari sign leclerc brother arthur to young driver programme charles leclerc", "chicago police say someone steal weed from a cannabis amnesty box at midway airport", "wyclef jean announces cannabis product line with cali life rolling stone", "no blame in hubert fatal crash in belgium the death of driver anthoine hubert at last", "this week in weed treat -pron- flu with cannabis", "canberra woman with endometriosis be self medicate with cannabis but legalise the", "party this nye watch -pron- cannabis intake police urge", "everything wrong with the cannabis industry investors beware", "twitter bot tout cannabis as a cure all despite few approve medical use cna", "robert kubica join alfa romeo as reserve driver pole robert kubica who drive for", "formula renault pat fry set to start in new role pat fry be to start work at renault", "davos can formula really go carbon neutral by can formula motor racing", "lewis hamilton and mercedes the obvious pairing go forward say toto wolff mercedes", "formula sean bratches to leave commercial role formula commercial boss sean bratches", "breckland police seize cannabis plant and make arrest in thetford", "mclaren andrea stella promote in andreas seidl three pronged restructure andrea stella", "cannabis demand be high in worth reporter online", "australian fire lewis hamilton pledge more than to aid fight against disaster", "ferrari launch a grandiose launch for the but can ferrari stop mercedes", "sir jackie stewart be hasten race to dementia cure formula ability to find", "ces hit by question over -pron- treatment of cannabis company cnn", "formula chadwick to continue williams development role w series chion jamie chadwick", "coronavirus chinese grand prix expect to be postpone over virus fear the chinese", "man catch with cannabis say -pron- have the drug because -pron- have great difficulty sleep", "keep -pron- cannabis stash safe with a new app base device loudcloudhealth", "recreational cannabis purchaser line up in morris morris daily herald", "formula e cancel china race to further increase pressure on the all electric formula e", "father who take cannabis oil to prolong -pron- life after be diagnose with a brain", "charles leclerc -pron- will crash with ferrari team mate sebastian vettel again ferrari", "australia bushfire monitoring fire before start of new season formula say -pron- be", "missouri choose -pron- medical cannabis growers hempgazette", "chinese grand prix red bull boss christian horner trust boss over coronavirus", "formula car launch testing schedule -pron- guide to the key date for pre season", "long beach lowers cannabis taxes benzinga", "shameful number of drug driver pull over on cocaine and cannabis liverpool echo", "nevada close pot test lab issue cannabi product warning san francisco chronicle", "cannabis startup pull out of ces tech show amid limit washington post", "cannabis industry predictions forbes", "prediction from cannabis industry experts more insurance business insurance journal", "cook with cannabis in a far out foodtime wgn radio chicago", "alpha tauri red bull former junior team toro rosso be rebrande for red bull", "report halt urge for new cannabis biz permit bay area reporter america high", "more than million in legal cannabis sell on second day in illinois state says nbc", "chinese grand prix in doubt as shanghai suspend event sport authority in shanghai", "monitor coronavirus outbreak in china formula monitoring the effect of the", "race point to be rebrande as aston martin after stroll rescue deal racing point team", "payment provider allegedly owe million to dispensary marijuana business daily", "renault need to regain confidence say team boss renault need to regain confidence this", "from french laundry to cannabis aaron keefer land at sonoma hills farm forbes", "lewis hamilton yet to talk to mercedes over contract lewis hamilton say -pron- be yet to", "nextleaf completes acquisition of water soluble tech for cannabis beverages benzinga", "hamilton have weak point other do not exploit alonso lewis hamilton have raise -pron-", "formula w series to be undercard at two race in the female only w series be set", "cannabis companies veteran organizations team up to combat suicide and overdose among vet", "haas unveil new car for formula season us base haas become the first formula", "miami grand prix formula make further change to plan for florida race formula", "watch mitch mcconnell frolic in a field of cannabis forbes", "dakar rally challenge be big of -pron- career two time chion alonso two time", "this cannabis entrepreneur say -pron- first in the industry to use nfc tags and that all", "-pron- approach cannabis edible backwards high society the growthop", "cannabi conclave return to davos meet benzinga at the event benzinga", "ratcliffe expect hamilton to stay with mercedes britain rich man sir jim ratcliffe", "christmas eve visit lead police to cannabis western telegraph", "roy nissany williams name israeli as formula test driver israeli roy nissany be name", "formula williams sign aitken as reserve driver briton jack aitken have join williams", "-pron- can beat hamilton in the right car verstappen red bull max verstappen say -pron- can", "colorado pot shop turn to highway sponsor sign amid strict ad rule on advertising", "cannabis strain for people who love strawberry leafly", "this colorado college will start offer a cannabis major in the fall cnn", "cannabis industry head to davos as stock rebound financial post", "illegal cannabis oil for sale at holland and barrett daily mail", "tolerance complicate sleep benefit from medical cannabis among patient with chronic pain", "radient technologies shoppers drug mart partner on exclusive medical cannabis brand", "illinois dispensaries sell nearly million worth of cannabis in january state say", "kubica to race in german touring car chionship former formula driver robert kubica be", "cura cannabis will pay record penalty for dishonest conduct misrepresent marijuana"]}