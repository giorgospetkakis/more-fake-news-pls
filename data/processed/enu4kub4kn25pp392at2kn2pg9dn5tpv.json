{"py/object": "data.Author", "author_id": "enu4kub4kn25pp392at2kn2pg9dn5tpv", "truth": 0, "tweets": ["So,  Tiger Woods Shoots 5-over to Close out Disappointing 2020 Genesis Open #URL# #URL#", "So,  Kurt Zouma Says Jose Mourinho Told Him He Was 'Rubbish' at Chelsea #URL# #URL#", "So,  Embiid, Simmons say success a matter of time #URL# #URL#", "So,  Like father like son: Shareef O'Neal heads to LSU #URL# #URL#", "So,  Magic leads tributes to Kobe at All-Star Game #URL# #URL#", "So,  Yu Darvish Says Astros Should Lose 2017 World Series, Rips Players' Apologies #URL# #URL#", "So,  Ryan Garcia Scores Vicious 1st-Round Knockout Win over Francisco Fonseca #URL# #URL#", "So,  Chelsea vs. Manchester United: Odds, Live Stream, TV Schedule and Preview #URL# #URL#", "So,  Oilers' Kassian suspended for kicking opponent #URL# #URL#", "So,  The fourth quarter of the All-Star Game will never be the same again #URL# #URL#", "So,  La Liga Table 2020 Week 24: Standings and Final Scores After Sunday #URL# #URL#", "So,  Common Says Dunk Contest Was Expected to Be a Tie: 'Somebody Didn't Do It Right' #URL# #URL#", "So,  Reds' Bauer calls Astros hypocrites and cheaters #URL# #URL#", "So,  Zach LaVine Says LeBron James Is His Dream Teammate in 'First Take' Interview #URL# #URL#", "So,  Minor leaguers getting minimum salary increase #URL# #URL#", "So,  Vanessa Bryant Posts Instagram for 'My Forever Valentine' Kobe Bryant #URL# #URL#", "So,  Tiger Woods Tied for 45th in Genesis Open After Shooting 73 in Round 2 #URL# #URL#", "So,  Blues' Jay Bouwmeester Has Defibrillator Put in Chest After Cardiac Emergency #URL# #URL#", "So,  Adam Silver Says He Expects 'Return to Normalcy' for NBA's China Relationship #URL# #URL#", "So,  Cavaliers Owner Dan Gilbert Returns to Work, Talks Recovery from 2019 Stroke #URL# #URL#", "So,  Tyson Fury's path to Deontay Wilder rematch: Bravado, bravery, controversy #URL# #URL#", "So,  Ex-Michigan State PG Keith Appling Arrested for Possession of Heroin #URL# #URL#", "So,  Neymar Praises 'Special' Jadon Sancho Ahead of PSG's UCL Clash with Dortmund #URL# #URL#", "So,  Derrick Jones Jr. Says Aaron Gordon Can Have Dunk Contest Rematch After Loss #URL# #URL#", "So,  Rams, Broncos Reportedly Decide to Send Fewer Coaches to 2020 NFL Combine #URL# #URL#", "So,  2020 Slam Dunk Contest Participants: Format, Odds and Predicted Winner #URL# #URL#", "So,  Chelsea Boss Frank Lampard on Decision to Drop Kepa: 'I Just Expect Reactions' #URL# #URL#", "So,  Cardinals' Steve Keim Compares CFL Signing Chris Streveler to Taysom Hill #URL# #URL#", "So,  Champions League 2020: Odds, Live Stream, TV Schedule for Last-16 Ties #URL# #URL#", "So,  Fixing WWE Raw and SmackDown's Worst Booking Decisions for the Week of Feb. 15 #URL# #URL#", "So,  Cavaliers Rumors: John Beilein May Step Down as HC During All-Star Break #URL# #URL#", "So,  Redskins releasing CB Norman after 4 seasons #URL# #URL#", "So,  All you need to know about this year's Daytona 500 #URL# #URL#", "So,  Kyle Juszczyk Defends Jimmy Garoppolo Amid Criticism for 49ers' Super Bowl Loss #URL# #URL#", "So,  Donny van de Beek Plays Down Real Madrid Links: 'If It Happens, It Happens' #URL# #URL#", "So,  Follow live: Team LeBron vs. Team Giannis in All-Star format that honors Kobe #URL# #URL#", "So,  Irate fans caught in 'horrific' traffic want refunds #URL# #URL#", "So,  Baker urges MLB to protect Astros from beanballs #URL# #URL#", "So,  WWE's Sasha Banks Reportedly Will Appear in 'The Mandalorian' Season 2 #URL# #URL#", "So,  N'Golo Kante Says Chelsea Not Looking for Revenge Against Manchester United #URL# #URL#", "So,  NBA All-Star Game 2020: LeBron vs. Giannis Rosters, TV Schedule and MVP Odds #URL# #URL#", "So,  Buddy Hield Wins 2020 NBA 3-Point Contest: Scores, Highlights and Reaction #URL# #URL#", "So,  Avenatti found guilty in Nike case, faces 20 years #URL# #URL#", "So,  Kawhi Leonard Debuts New Balance Signature Shoe During 2020 NBA All-Star Game #URL# #URL#", "So,  Antonio Brown Talks Roethlisberger, Brady, Raiders, NFL Return on Breakfast Club #URL# #URL#", "So,  Giant Killers: Which teams could surprise in the first round #URL# #URL#", "So,  What Man City's UEFA ban means and what happens next #URL# #URL#", "So,  Series goat Darvish says Astros should lose title #URL# #URL#", "So,  Paul Scholes Says Sir Alex Ferguson Would Not Have Let Paul Pogba Train Alone #URL# #URL#", "So,  Rivers concerned after George reinjures hammy #URL# #URL#", "So,  Blues' Bouwmeester undergoes heart procedure #URL# #URL#", "So,  Red Sox Rumors: Sign-Stealing Report Expected by End of February #URL# #URL#", "So,  Tiger balloons to 76, says he felt 'stiff' at Riviera #URL# #URL#", "So,  Shaquille O'Neal's Son Shareef Announces Transfer to LSU from UCLA #URL# #URL#", "So,  Bam Adebayo Wins 2020 NBA Skills Competition: Recap, Highlights, Reaction #URL# #URL#", "So,  Bronny James, Sierra Canyon Beat St. John Bosco 67-39 as BJ Boston Drops 18 #URL# #URL#", "So,  UFC Fight Night 167 Results: Blachowicz Beats Anderson via 1st-Round Knockout #URL# #URL#", "So,  Overwatch League 2020 Week 2: Carpe's Top Plays, Prize Money #URL# #URL#", "So,  An early look at the sneakers for All-Star Weekend #URL# #URL#", "So,  Real Madrid's Vinicius Jr. Wants to Follow Raheem Sterling's Goalscoring Example #URL# #URL#", "So,  Rhea Ripley Beats Bianca Belair, Retains NXT Title at WWE NXT TakeOver: Portland #URL# #URL#", "So,  Texans' Watt has 'best day,' marries NWSL's Ohai #URL# #URL#", "So,  Bracketology: Indiana stays on right side of the bubble #URL# #URL#", "So,  NBA Slam Dunk Contest 2020: Participants, Format, TV Schedule and Predictions #URL# #URL#", "So,  Walker: Tatum 'best player on the court' vs. Clips #URL# #URL#", "So,  Analysing How Jadon Sancho Can Become English Football's Most Expensive Signing #URL# #URL#", "So,  MLB, MLBPA Reportedly Discussing New Rules to Prevent Electronic Sign-Stealing #URL# #URL#", "So,  Kobe Bryant, David Stern Honored by Pau Gasol, Sue Bird Before Rising Stars Game #URL# #URL#", "So,  EPL Winners and Losers After Sunday's 2020 Week 26 Premier League Results #URL# #URL#", "So,  Barack Obama Reflects on Kobe Bryant's Death at NBA All-Star Weekend #URL# #URL#", "So,  'It's just like ripping open a scab': Dodgers' sign-stealing anger is bursting through #URL# #URL#", "So,  How LaMelo Ball Fits with NBA's Worst Teams #URL# #URL#", "So,  Nets' Spencer Dinwiddie: Knicks 'Probably Not Going to Be That Good' Next Year #URL# #URL#", "So,  Zinedine Zidane: Eden Hazard 'Ready to Play' for Real Madrid After Injury Layoff #URL# #URL#", "So,  Alex Rodriguez Reportedly Candidate to Buy Mets After Failed Steve Cohen Sale #URL# #URL#", "So,  Who's next for Jan Blachowicz and Corey Anderson? #URL# #URL#", "So,  Daytona 500 2020: Start Time, Date, TV Schedule, Live Stream and More #URL# #URL#", "So,  NBA All-Star Game MVP award named for Kobe #URL# #URL#", "So,  Rudolph: Garrett slur claim a 'bold-faced lie' #URL# #URL#", "So,  Silver expects 'normalcy' soon for NBA in China #URL# #URL#", "So,  NXT TakeOver Portland: Live results and reactions #URL# #URL#", "So,  Real Madrid vs. Celta Vigo: Odds, Live Stream, TV Schedule and Preview #URL# #URL#", "So,  Kawhi Leonard on Winning ASG's 1st Kobe Bryant MVP Award: 'This One Is for Him' #URL# #URL#", "So,  Quique Setien on Lionel Messi: 'There Will Be a Time When We Have to Rest Him' #URL# #URL#", "So,  Thiago Silva Says PSG 'Have No Fear' of Borussia Dortmund's Erling Haaland #URL# #URL#", "So,  Dusty Baker Worried About 'Premeditated Retaliation' Against Astros for Cheating #URL# #URL#", "So,  Antoine Griezmann, Barcelona Escape with Narrow Win vs. Getafe #URL# #URL#", "So,  Julian Nagelsmann Talks Rejecting Real Madrid, Future Premier League Interest #URL# #URL#", "So,  Trump makes grand entrance at Daytona 500 #URL# #URL#", "So,  Former Heat, Raptors Star Chris Bosh Not Named Finalist for 2020 Basketball HOF #URL# #URL#", "So,  Kawhi lights-out from beyond arc to claim MVP #URL# #URL#", "So,  Two California Little Leagues ban use of Astros #URL# #URL#", "So,  What's up with Tiger and a big-time final group on Sunday at Genesis #URL# #URL#", "So,  Barcelona Hasn't Made Approach for Angel Rodriguez, Says Getafe President #URL# #URL#", "So,  NBA Power Rankings: Where Every Team Sits at the All-Star Break #URL# #URL#", "So,  Damian Lillard Gets Engaged to Girlfriend Kay'La Hanson at NBA All-Star Weekend #URL# #URL#", "So,  Kobe, Stern honored at All-Star Celebrity Game #URL# #URL#", "So,  Mikel Arteta: Nicolas Pepe's Price Tag Has Put Player in 'Difficult Position' #URL# #URL#", "So,  Antoine Griezmann Discusses Lionel Messi Relationship After Getafe Win #URL# #URL#", "So,  The greatness of this All-Star Game will carry us #URL# #URL#"], "ents": [[{"py/tuple": ["Tiger Woods", "PERSON"]}], [{"py/tuple": ["Kurt Zouma", "PERSON"]}, {"py/tuple": ["Jose Mourinho", "PERSON"]}, {"py/tuple": ["Chelsea", "ORG"]}], [{"py/tuple": ["Embiid", "PERSON"]}], [{"py/tuple": ["Shareef O'Neal", "PERSON"]}, {"py/tuple": ["LSU", "ORG"]}], [{"py/tuple": ["Kobe", "GPE"]}, {"py/tuple": ["All-Star Game", "FAC"]}], [{"py/tuple": ["Yu Darvish", "PERSON"]}, {"py/tuple": ["Astros", "PERSON"]}, {"py/tuple": ["World Series", "EVENT"]}, {"py/tuple": ["Rips", "PERSON"]}], [{"py/tuple": ["Ryan Garcia Scores", "PERSON"]}, {"py/tuple": ["Francisco Fonseca", "PERSON"]}], [{"py/tuple": ["Chelsea", "PERSON"]}, {"py/tuple": ["Manchester United", "PERSON"]}], [{"py/tuple": ["Oilers", "PERSON"]}, {"py/tuple": ["Kassian", "NORP"]}], [{"py/tuple": ["The fourth quarter", "DATE"]}], [{"py/tuple": ["2020 Week", "DATE"]}, {"py/tuple": ["24", "CARDINAL"]}, {"py/tuple": ["Sunday", "DATE"]}], [{"py/tuple": ["Dunk Contest", "PERSON"]}], [{"py/tuple": ["Reds", "ORG"]}, {"py/tuple": ["Bauer", "ORG"]}, {"py/tuple": ["Astros", "PERSON"]}], [{"py/tuple": ["LeBron James", "PERSON"]}], [], [{"py/tuple": ["Vanessa Bryant", "PERSON"]}, {"py/tuple": ["My Forever Valentine'", "WORK_OF_ART"]}, {"py/tuple": ["Kobe Bryant", "PERSON"]}], [{"py/tuple": ["Tiger Woods", "PERSON"]}, {"py/tuple": ["45th", "ORDINAL"]}, {"py/tuple": ["Genesis", "GPE"]}, {"py/tuple": ["73", "CARDINAL"]}, {"py/tuple": ["2", "CARDINAL"]}], [{"py/tuple": ["Jay Bouwmeester", "PERSON"]}], [{"py/tuple": ["NBA", "ORG"]}, {"py/tuple": ["China", "GPE"]}], [{"py/tuple": ["Cavaliers", "ORG"]}, {"py/tuple": ["Owner Dan Gilbert Returns", "PERSON"]}, {"py/tuple": ["2019", "DATE"]}], [{"py/tuple": ["Tyson Fury's", "ORG"]}, {"py/tuple": ["Wilder", "PERSON"]}, {"py/tuple": ["Bravado", "PERSON"]}], [{"py/tuple": ["Ex-Michigan State", "ORG"]}, {"py/tuple": ["Keith Appling", "ORG"]}], [{"py/tuple": ["Neymar Praises 'Special'", "ORG"]}, {"py/tuple": ["PSG", "ORG"]}, {"py/tuple": ["Dortmund", "PERSON"]}], [{"py/tuple": ["Derrick Jones Jr.", "PERSON"]}, {"py/tuple": ["Aaron Gordon Can", "PERSON"]}], [{"py/tuple": ["Rams", "PERSON"]}, {"py/tuple": ["2020", "CARDINAL"]}, {"py/tuple": ["NFL", "ORG"]}], [{"py/tuple": ["2020", "CARDINAL"]}], [], [{"py/tuple": ["Cardinals", "ORG"]}, {"py/tuple": ["Steve Keim Compares CFL", "ORG"]}, {"py/tuple": ["Chris Streveler", "PERSON"]}], [{"py/tuple": ["Chions League", "ORG"]}, {"py/tuple": ["2020", "CARDINAL"]}], [{"py/tuple": ["SmackDown", "ORG"]}, {"py/tuple": ["the Week of Feb. 15", "DATE"]}], [{"py/tuple": ["John Beilein", "PERSON"]}], [{"py/tuple": ["Redskins", "PERSON"]}, {"py/tuple": ["Norman", "PERSON"]}, {"py/tuple": ["4 seasons", "DATE"]}], [{"py/tuple": ["year", "DATE"]}], [{"py/tuple": ["Defends Jimmy Garoppolo Amid Criticism", "PERSON"]}, {"py/tuple": ["49ers", "CARDINAL"]}, {"py/tuple": ["Super Bowl Loss", "EVENT"]}], [{"py/tuple": ["Donny van de", "PERSON"]}], [{"py/tuple": ["Team LeBron", "PERSON"]}, {"py/tuple": ["Team Giannis", "PERSON"]}, {"py/tuple": ["Kobe", "GPE"]}], [{"py/tuple": ["Irate", "ORG"]}], [{"py/tuple": ["Baker", "PERSON"]}, {"py/tuple": ["Astros", "PERSON"]}], [{"py/tuple": ["WWE", "ORG"]}, {"py/tuple": ["Will Appear", "PERSON"]}, {"py/tuple": ["'The Mandalorian' Season 2", "WORK_OF_ART"]}], [], [{"py/tuple": ["NBA All-Star Game", "ORG"]}, {"py/tuple": ["LeBron", "PERSON"]}, {"py/tuple": ["Giannis Rosters", "PERSON"]}], [{"py/tuple": ["2020", "CARDINAL"]}, {"py/tuple": ["NBA", "ORG"]}], [{"py/tuple": ["Avenatti", "ORG"]}, {"py/tuple": ["Nike", "ORG"]}, {"py/tuple": ["20 years", "DATE"]}], [{"py/tuple": ["2020", "CARDINAL"]}], [{"py/tuple": ["Brady", "PERSON"]}, {"py/tuple": ["NFL", "ORG"]}, {"py/tuple": ["Breakfast Club", "ORG"]}], [{"py/tuple": ["first", "ORDINAL"]}], [{"py/tuple": ["Man City's", "GPE"]}, {"py/tuple": ["UEFA", "ORG"]}], [{"py/tuple": ["Series", "EVENT"]}, {"py/tuple": ["Darvish", "PERSON"]}, {"py/tuple": ["Astros", "PERSON"]}], [{"py/tuple": ["Paul Scholes", "PERSON"]}, {"py/tuple": ["Alex Ferguson", "PERSON"]}], [{"py/tuple": ["Rivers", "PERSON"]}, {"py/tuple": ["George", "PERSON"]}], [], [{"py/tuple": ["February", "DATE"]}], [{"py/tuple": ["Tiger", "PERSON"]}, {"py/tuple": ["76", "CARDINAL"]}, {"py/tuple": ["Riviera", "ORG"]}], [{"py/tuple": ["Shaquille O'Neal's", "PERSON"]}, {"py/tuple": ["LSU", "ORG"]}, {"py/tuple": ["UCLA", "ORG"]}], [{"py/tuple": ["2020", "CARDINAL"]}, {"py/tuple": ["NBA", "ORG"]}], [{"py/tuple": ["Bronny James", "PERSON"]}, {"py/tuple": ["Sierra Canyon", "PERSON"]}, {"py/tuple": ["John Bosco 67-39", "PERSON"]}, {"py/tuple": ["BJ Boston", "ORG"]}, {"py/tuple": ["18", "CARDINAL"]}], [{"py/tuple": ["UFC", "ORG"]}, {"py/tuple": ["Blachowicz Beats Anderson", "PERSON"]}], [{"py/tuple": ["Overwatch League", "ORG"]}, {"py/tuple": ["2", "CARDINAL"]}], [], [{"py/tuple": ["Real Madrid's", "ORG"]}, {"py/tuple": ["Vinicius Jr.", "PERSON"]}], [{"py/tuple": ["Rhea Ripley Beats Bianca Belair", "ORG"]}, {"py/tuple": ["Retains NXT Title", "ORG"]}, {"py/tuple": ["WWE NXT", "ORG"]}, {"py/tuple": ["Portland", "GPE"]}], [{"py/tuple": ["Texans", "NORP"]}, {"py/tuple": ["Watt", "PERSON"]}, {"py/tuple": ["NWSL", "ORG"]}], [{"py/tuple": ["Indiana", "GPE"]}], [{"py/tuple": ["NBA Slam Dunk Contest", "ORG"]}, {"py/tuple": ["2020", "CARDINAL"]}, {"py/tuple": ["Format", "ORG"]}], [{"py/tuple": ["Walker", "PERSON"]}, {"py/tuple": ["Tatum", "PERSON"]}, {"py/tuple": ["Clips", "PERSON"]}], [], [{"py/tuple": ["MLBPA", "ORG"]}, {"py/tuple": ["Discussing New Rules to Prevent Electronic Sign-Stealing", "ORG"]}], [{"py/tuple": ["Kobe Bryant", "PERSON"]}, {"py/tuple": ["David Stern Honored", "PERSON"]}, {"py/tuple": ["Pau Gasol", "PERSON"]}], [{"py/tuple": ["EPL Winners", "ORG"]}, {"py/tuple": ["Sunday", "DATE"]}, {"py/tuple": ["2020 Week", "DATE"]}, {"py/tuple": ["26", "CARDINAL"]}], [{"py/tuple": ["Barack Obama Reflects", "ORG"]}, {"py/tuple": ["Kobe Bryant's", "ORG"]}, {"py/tuple": ["NBA All-Star Weekend", "FAC"]}], [{"py/tuple": ["Dodgers", "PERSON"]}], [{"py/tuple": ["NBA", "ORG"]}, {"py/tuple": ["Worst Teams", "ORG"]}], [{"py/tuple": ["Nets", "ORG"]}, {"py/tuple": ["Spencer Dinwiddie", "PERSON"]}, {"py/tuple": ["Knicks", "ORG"]}, {"py/tuple": ["Probably Not Going to Be That Good' Next Year", "WORK_OF_ART"]}], [{"py/tuple": ["Zinedine Zidane", "PERSON"]}, {"py/tuple": ["Eden Hazard '", "PERSON"]}, {"py/tuple": ["Ready to Play' for Real Madrid After Injury Layoff", "WORK_OF_ART"]}], [{"py/tuple": ["Alex Rodriguez", "PERSON"]}, {"py/tuple": ["Steve Cohen", "PERSON"]}], [{"py/tuple": ["Jan Blachowicz", "PERSON"]}, {"py/tuple": ["Corey Anderson", "PERSON"]}], [], [{"py/tuple": ["NBA All-Star Game MVP", "ORG"]}, {"py/tuple": ["Kobe", "ORG"]}], [{"py/tuple": ["Rudolph", "PERSON"]}, {"py/tuple": ["Garrett", "PERSON"]}], [{"py/tuple": ["Silver", "LOC"]}, {"py/tuple": ["NBA", "ORG"]}, {"py/tuple": ["China", "GPE"]}], [{"py/tuple": ["NXT", "ORG"]}], [{"py/tuple": ["Real Madrid", "ORG"]}, {"py/tuple": ["Celta Vigo", "LOC"]}], [{"py/tuple": ["Winning ASG's", "ORG"]}, {"py/tuple": ["1st Kobe Bryant", "ORG"]}], [{"py/tuple": ["Quique Setien", "PERSON"]}], [{"py/tuple": ["Borussia Dortmund's", "ORG"]}], [{"py/tuple": ["Baker", "PERSON"]}, {"py/tuple": ["Astros", "PERSON"]}], [{"py/tuple": ["Antoine Griezmann", "PERSON"]}, {"py/tuple": ["Barcelona Escape", "ORG"]}, {"py/tuple": ["Narrow Win", "PERSON"]}, {"py/tuple": ["Getafe", "PERSON"]}], [{"py/tuple": ["Future Premier League Interest", "ORG"]}], [{"py/tuple": ["Trump", "PERSON"]}, {"py/tuple": ["Daytona 500", "FAC"]}], [{"py/tuple": ["2020", "CARDINAL"]}], [{"py/tuple": ["Kawhi", "GPE"]}, {"py/tuple": ["arc", "ORG"]}], [{"py/tuple": ["Two", "CARDINAL"]}, {"py/tuple": ["California Little Leagues", "ORG"]}, {"py/tuple": ["Astros", "PERSON"]}], [{"py/tuple": ["Tiger", "PERSON"]}, {"py/tuple": ["Sunday", "DATE"]}, {"py/tuple": ["Genesis", "GPE"]}], [{"py/tuple": ["Barcelona", "ORG"]}, {"py/tuple": ["Angel Rodriguez", "PERSON"]}, {"py/tuple": ["Getafe", "PERSON"]}], [{"py/tuple": ["NBA Power Rankings:", "ORG"]}, {"py/tuple": ["the All-Star Break", "FAC"]}], [{"py/tuple": ["Damian Lillard Gets Engaged", "PERSON"]}, {"py/tuple": ["NBA All-Star Weekend", "ORG"]}], [{"py/tuple": ["Kobe", "ORG"]}, {"py/tuple": ["Stern", "ORG"]}, {"py/tuple": ["All-Star Celebrity Game", "FAC"]}], [{"py/tuple": ["Nicolas Pepe's", "PERSON"]}], [{"py/tuple": ["Getafe Win", "PERSON"]}], []], "POS_tags": [[{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "NUM", "PART", "VERB", "ADP", "ADJ", "NUM", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "VERB", "PRON", "PRON", "AUX", "PUNCT", "NOUN", "PUNCT", "ADP", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PUNCT", "NOUN", "VERB", "NOUN", "DET", "NOUN", "ADP", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "SCONJ", "NOUN", "SCONJ", "NOUN", "PUNCT", "NOUN", "ADJ", "NOUN", "ADP", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "VERB", "NOUN", "ADP", "PROPN", "ADP", "PROPN", "PUNCT", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "VERB", "PROPN", "VERB", "VERB", "NUM", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PART", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "PROPN", "NOUN", "PUNCT", "NOUN", "PROPN", "PROPN", "ADP", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "ADP", "PROPN", "PROPN", "PUNCT", "NOUN", "PUNCT", "PROPN", "PROPN", "PUNCT", "NOUN", "PROPN", "CCONJ", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "NOUN", "PART", "PROPN", "VERB", "ADP", "VERB", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "DET", "ADJ", "NOUN", "ADP", "DET", "PROPN", "PUNCT", "PROPN", "PROPN", "VERB", "ADV", "AUX", "DET", "ADJ", "ADV", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "NUM", "NOUN", "NUM", "PUNCT", "NOUN", "CCONJ", "PROPN", "PROPN", "ADP", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "VERB", "PROPN", "PROPN", "AUX", "VERB", "PART", "AUX", "DET", "NOUN", "PUNCT", "PUNCT", "PRON", "AUX", "PART", "AUX", "PRON", "INTJ", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PART", "PROPN", "VERB", "PROPN", "NOUN", "CCONJ", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "AUX", "DET", "PROPN", "NOUN", "ADP", "PUNCT", "ADJ", "VERB", "PUNCT", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "ADJ", "NOUN", "VERB", "ADJ", "NOUN", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "PROPN", "ADP", "PUNCT", "DET", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "VERB", "ADP", "NOUN", "ADP", "PROPN", "PROPN", "ADP", "VERB", "NUM", "ADP", "PROPN", "NUM", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "NOUN", "PART", "PROPN", "PROPN", "AUX", "PROPN", "VERB", "ADP", "NOUN", "ADP", "PROPN", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "VERB", "PRON", "VERB", "PUNCT", "NOUN", "ADP", "PROPN", "PUNCT", "ADP", "PROPN", "PART", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "PART", "VERB", "PUNCT", "PROPN", "PROPN", "ADP", "NUM", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PART", "NOUN", "ADP", "PROPN", "PROPN", "NOUN", "PUNCT", "PROPN", "PUNCT", "NOUN", "PUNCT", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADP", "PROPN", "ADP", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PART", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "ADP", "PROPN", "PART", "PROPN", "PROPN", "ADP", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "VERB", "AUX", "PROPN", "PROPN", "NOUN", "ADP", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PUNCT", "PROPN", "ADV", "VERB", "PART", "VERB", "ADJ", "NOUN", "ADP", "NUM", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "NUM", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "NOUN", "PUNCT", "PROPN", "CCONJ", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "PROPN", "ADP", "PROPN", "PART", "VERB", "PROPN", "PUNCT", "PUNCT", "PRON", "ADV", "VERB", "PROPN", "PART", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PART", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADP", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "NUM", "PUNCT", "NOUN", "PUNCT", "PROPN", "PROPN", "PUNCT", "NOUN", "PROPN", "ADP", "PROPN", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "VERB", "PROPN", "PROPN", "CCONJ", "PROPN", "PART", "PROPN", "PROPN", "PROPN", "ADP", "DET", "PROPN", "ADP", "PROPN", "NUM", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "NOUN", "PUNCT", "PROPN", "PROPN", "VERB", "VERB", "ADV", "SCONJ", "PROPN", "ADP", "PROPN", "PUNCT", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "VERB", "PROPN", "PROPN", "ADP", "NUM", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "DET", "PRON", "VERB", "PART", "VERB", "ADP", "DET", "NOUN", "PART", "PROPN", "NUM", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "ADP", "PROPN", "ADP", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "PROPN", "VERB", "ADP", "ADJ", "PROPN", "PROPN", "PUNCT", "PUNCT", "SCONJ", "PRON", "VERB", "PUNCT", "PRON", "VERB", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "VERB", "PUNCT", "PROPN", "PROPN", "ADP", "PROPN", "PROPN", "ADP", "ADJ", "PUNCT", "NOUN", "NOUN", "DET", "VERB", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "ADJ", "NOUN", "VERB", "ADP", "PUNCT", "ADJ", "PUNCT", "NOUN", "VERB", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "VERB", "PROPN", "PART", "VERB", "PROPN", "ADP", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PART", "PROPN", "PROPN", "ADV", "VERB", "VERB", "ADP", "PUNCT", "DET", "PROPN", "PART", "NOUN", "NUM", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "VERB", "PROPN", "PART", "VERB", "ADP", "NOUN", "ADP", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "NUM", "PUNCT", "PROPN", "ADP", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "CCONJ", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "NUM", "PROPN", "NUM", "NOUN", "PUNCT", "NOUN", "PUNCT", "PROPN", "CCONJ", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "VERB", "ADJ", "ADP", "PROPN", "NOUN", "PUNCT", "VERB", "NUM", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADP", "NUM", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "PROPN", "PUNCT", "PROPN", "PROPN", "ADP", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PUNCT", "DET", "NOUN", "VERB", "VERB", "ADP", "DET", "ADJ", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PRON", "PROPN", "PROPN", "PART", "PROPN", "NOUN", "NOUN", "CCONJ", "PRON", "VERB", "ADV", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "VERB", "NOUN", "VERB", "VERB", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "PROPN", "VERB", "PART", "AUX", "VERB", "PROPN", "PROPN", "VERB", "ADV", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "NOUN", "VERB", "ADP", "PROPN", "VERB", "ADJ", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PART", "PROPN", "VERB", "NOUN", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "NOUN", "PUNCT", "NOUN", "PUNCT", "PROPN", "NOUN", "VERB", "ADP", "NOUN", "ADP", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "NOUN", "ADP", "NUM", "PUNCT", "VERB", "PRON", "VERB", "PUNCT", "ADJ", "PUNCT", "ADP", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PART", "PROPN", "PROPN", "VERB", "PROPN", "ADP", "NOUN", "ADP", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "NUM", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "PUNCT", "PROPN", "PUNCT", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "PROPN", "NUM", "SYM", "NUM", "SCONJ", "PROPN", "PROPN", "PROPN", "NUM", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "NOUN", "NUM", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "ADP", "ADJ", "PUNCT", "NOUN", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "NUM", "PROPN", "NUM", "PUNCT", "NOUN", "PART", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "DET", "ADJ", "NOUN", "ADP", "DET", "NOUN", "ADP", "PROPN", "PUNCT", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PART", "PROPN", "PROPN", "VERB", "PART", "VERB", "PROPN", "PROPN", "PART", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "ADP", "PROPN", "PROPN", "PROPN", "PUNCT", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PART", "PROPN", "AUX", "PUNCT", "ADJ", "NOUN", "PUNCT", "PUNCT", "VERB", "PROPN", "PART", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "NOUN", "PUNCT", "PROPN", "VERB", "ADP", "ADJ", "NOUN", "ADP", "DET", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "PROPN", "NUM", "PUNCT", "NOUN", "PUNCT", "PROPN", "PUNCT", "NOUN", "PROPN", "CCONJ", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PUNCT", "PROPN", "PART", "ADJ", "NOUN", "ADP", "DET", "NOUN", "PUNCT", "X", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "VERB", "ADV", "PROPN", "PROPN", "VERB", "VERB", "PROPN", "PROPN", "PART", "ADV", "ADJ", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PUNCT", "PROPN", "ADV", "VERB", "ADJ", "NOUN", "ADP", "VERB", "PROPN", "PROPN", "PUNCT", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "ADP", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "ADP", "VERB", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "CCONJ", "PROPN", "ADP", "PROPN", "PART", "NUM", "PROPN", "NUM", "PROPN", "PROPN", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "VERB", "ADP", "PROPN", "PROPN", "PART", "NOUN", "ADP", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PUNCT", "PRON", "AUX", "ADV", "SCONJ", "VERB", "ADJ", "DET", "NOUN", "PUNCT", "PUNCT", "NOUN", "PART", "NOUN", "PUNCT", "VERB", "NOUN", "AUX", "VERB", "ADP", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "ADV", "PROPN", "PROPN", "VERB", "ADP", "PROPN", "PART", "PROPN", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PART", "PROPN", "PROPN", "PUNCT", "PROPN", "PART", "ADV", "PART", "VERB", "PART", "AUX", "DET", "ADJ", "PUNCT", "ADJ", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PUNCT", "ADJ", "PART", "VERB", "PUNCT", "ADP", "PROPN", "PROPN", "ADP", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "ADV", "NOUN", "PART", "VERB", "PROPN", "ADP", "VERB", "PROPN", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PRON", "AUX", "ADJ", "ADP", "PROPN", "PROPN", "CCONJ", "PROPN", "PROPN", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "NUM", "NUM", "PUNCT", "VERB", "PROPN", "PUNCT", "NOUN", "PUNCT", "NOUN", "PROPN", "PUNCT", "PROPN", "PROPN", "CCONJ", "ADJ", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "NOUN", "VERB", "ADP", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PUNCT", "PROPN", "ADJ", "VERB", "DET", "PUNCT", "ADV", "PUNCT", "VERB", "NOUN", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "VERB", "PUNCT", "NOUN", "PUNCT", "ADV", "ADP", "PROPN", "ADP", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "PUNCT", "ADJ", "NOUN", "CCONJ", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "ADP", "PROPN", "PROPN", "PUNCT", "NOUN", "PUNCT", "PROPN", "PROPN", "PUNCT", "NOUN", "PROPN", "CCONJ", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "ADP", "PROPN", "PROPN", "PART", "ADJ", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PUNCT", "DET", "NOUN", "AUX", "ADP", "PRON", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "ADP", "PROPN", "PROPN", "PUNCT", "PUNCT", "PRON", "VERB", "AUX", "DET", "NOUN", "ADV", "PRON", "AUX", "PART", "VERB", "PRON", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "VERB", "PROPN", "PUNCT", "AUX", "DET", "NOUN", "PUNCT", "ADP", "PROPN", "PROPN", "PART", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "ADJ", "PROPN", "VERB", "ADP", "PUNCT", "ADJ", "NOUN", "PUNCT", "ADP", "PROPN", "ADP", "VERB", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "ADP", "PROPN", "PROPN", "ADP", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "VERB", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "VERB", "ADJ", "NOUN", "ADP", "PROPN", "NUM", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "PROPN", "PART", "VERB", "NOUN", "ADP", "NUM", "NOUN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "NOUN", "PUNCT", "ADP", "ADP", "ADP", "PROPN", "PART", "VERB", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "NUM", "PROPN", "PROPN", "PROPN", "VERB", "NOUN", "ADP", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PRON", "AUX", "ADP", "ADP", "PROPN", "CCONJ", "DET", "ADJ", "PUNCT", "NOUN", "ADJ", "NOUN", "ADP", "PROPN", "ADP", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "AUX", "PART", "VERB", "PROPN", "ADP", "PROPN", "PROPN", "PUNCT", "VERB", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "PUNCT", "ADV", "DET", "NOUN", "VERB", "ADP", "DET", "PROPN", "PUNCT", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "VERB", "VERB", "PART", "VERB", "PUNCT", "PROPN", "ADP", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PUNCT", "PROPN", "VERB", "ADP", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PART", "PROPN", "PROPN", "AUX", "VERB", "PROPN", "ADP", "PUNCT", "PROPN", "PROPN", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "PROPN", "ADP", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PUNCT", "SPACE", "DET", "NOUN", "ADP", "DET", "PROPN", "PUNCT", "PROPN", "PROPN", "VERB", "VERB", "PRON", "SPACE"]}]], "clean": ["so tiger woods shoots to close out disappointing genesis open", "so kurt zouma say jose mourinho tell -pron- -pron- be rubbish at chelsea", "so embiid simmon say success a matter of time", "so like father like son shareef head to lsu", "so magic lead tribute to kobe at all star game", "so yu darvish say astros should lose world series rips players apology", "so ryan garcia scores vicious round knockout win over francisco fonseca", "so chelsea manchester united odd live stream tv schedule and preview", "so oiler kassian suspend for kick opponent", "so the fourth quarter of the all star game will never be the same again", "so la liga table week standing and final scores after sunday", "so common say dunk contest be expect to be a tie somebody do do -pron- right", "so reds bauer call astros hypocrite and cheater", "so zach lavine say lebron james be -pron- dream teammate in first take interview", "so minor leaguer get minimum salary increase", "so vanessa bryant posts instagram for -pron- forever valentine kobe bryant", "so tiger woods tie for in genesis open after shoot in round", "so blue jay bouwmeester have defibrillator put in chest after cardiac emergency", "so adam silver say -pron- expect return to normalcy for nba china relationship", "so cavaliers owner dan gilbert return to work talks recovery from stroke", "so tyson fury path to deontay wilder rematch bravado bravery controversy", "so ex michigan state pg keith appling arrested for possession of heroin", "so neymar praises special jadon sancho ahead of psg ucl clash with dortmund", "so derrick jones say aaron gordon can have dunk contest rematch after loss", "so rams broncos reportedly decide to send few coach to nfl combine", "so slam dunk contest participants format odds and predicted winner", "so chelsea boss frank lard on decision to drop kepa -pron- just expect reactions", "so cardinals steve keim compares cfl signing chris streveler to taysom hill", "so chions league odd live stream tv schedule for tie", "so fix wwe raw and smackdown worst booking decisions for the week of", "so cavaliers rumor john beilein may step down as hc during all star break", "so redskins release cb norman after season", "so all -pron- need to know about this year daytona", "so kyle juszczyk defend jimmy garoppolo amid criticism for super bowl loss", "so donny van de beek play down real madrid links if -pron- happen -pron- happen", "so follow live team lebron team giannis in all star format that honor kobe", "so irate fan catch in horrific traffic want refund", "so baker urge mlb to protect astros from beanball", "so wwe sasha banks reportedly will appear in the mandalorian season", "so kante say chelsea not look for revenge against manchester united", "so nba all star game lebron giannis rosters tv schedule and mvp odds", "so buddy hield wins nba contest score highlights and reaction", "so avenatti find guilty in nike case face year", "so kawhi leonard debuts new balance signature shoe during nba all star game", "so antonio brown talks roethlisberger brady raiders nfl return on breakfast club", "so giant killers which team could surprise in the first round", "so what man city uefa ban mean and what happen next", "so series goat darvish say astro should lose title", "so paul scholes say sir alex ferguson would not have let paul pogba train alone", "so river concern after george reinjure hammy", "so blues bouwmeester undergo heart procedure", "so red sox rumor sign stealing report expect by end of february", "so tiger balloon to say -pron- feel stiff at riviera", "so shaquille son shareef announce transfer to lsu from ucla", "so bam adebayo wins nba skills competition recap highlights reaction", "so bronny james sierra canyon beat john bosco as bj boston drops", "so ufc fight night result blachowicz beats anderson via round knockout", "so overwatch league week carpe top plays prize money", "so an early look at the sneaker for all star weekend", "so real madrid vinicius want to follow raheem sterling goalscoring exle", "so rhea ripley beat bianca belair retains nxt title at wwe nxt takeover portland", "so texans watt have good day marry nwsl ohai", "so bracketology indiana stay on right side of the bubble", "so nba slam dunk contest participant format tv schedule and predictions", "so walker tatum good player on the court clip", "so analyse how jadon sancho can become english football most expensive signing", "so mlb mlbpa reportedly discuss new rule to prevent electronic sign stealing", "so kobe bryant david stern honored by pau gasol sue bird before rise stars game", "so epl winners and losers after sunday week premier league result", "so barack obama reflect on kobe bryant death at nba all star weekend", "so -pron- just like rip open a scab dodger sign steal anger be burst through", "so how lamelo ball fit with nba worst team", "so nets spencer dinwiddie knicks probably not go to be that good next year", "so zinedine zidane eden hazard ready to play for real madrid after injury layoff", "so alex rodriguez reportedly candidate to buy mets after fail steve cohen sale", "so who next for jan blachowicz and corey anderson", "so daytona start time date tv schedule live stream and more", "so nba all star game mvp award name for kobe", "so rudolph garrett slur claim a bold face lie", "so silver expect normalcy soon for nba in china", "so nxt takeover portland live result and reaction", "so real madrid celta vigo odd live stream tv schedule and preview", "so kawhi leonard on winning asg kobe bryant mvp award this one be for -pron-", "so quique setien on lionel messi there will be a time when -pron- have to rest -pron-", "so thiago silva say psg have no fear of borussia dortmund erling haaland", "so dusty baker worry about premeditated retaliation against astros for cheat", "so antoine griezmann barcelona escape with narrow win getafe", "so julian nagelsmann talks reject real madrid future premier league interest", "so trump make grand entrance at daytona", "so former heat raptors star chris bosh not name finalist for basketball hof", "so kawhi light out from beyond arc to claim mvp", "so two california little leagues ban use of astro", "so what up with tiger and a big time final group on sunday at genesis", "so barcelona have make approach for angel rodriguez say getafe president", "so nba power rankings where every team sit at the all star break", "so damian lillard get engage to girlfriend hanson at nba all star weekend", "so kobe stern honor at all star celebrity game", "so mikel arteta nicolas pepe price tag have put player in difficult position", "so antoine griezmann discusses lionel messi relationship after getafe win", "so the greatness of this all star game will carry -pron-"]}