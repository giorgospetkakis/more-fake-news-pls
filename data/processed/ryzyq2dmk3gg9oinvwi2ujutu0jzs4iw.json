{"py/object": "data.Author", "author_id": "ryzyq2dmk3gg9oinvwi2ujutu0jzs4iw", "truth": 0, "tweets": ["Has Area created the coolest accessory of New York Fashion Week? Who doesn't need a chair necklace? --&gt;\u2026 #URL#", "Well, this is news of the day #URL#", "The answer to your leather jacket styling questions --&gt; #URL#  \u00a9 Getty Images / Sandra Semburg #URL#", "She amazes us every time #URL# #URL#", "* Books a ticket to Berlin * #URL#", "From her yellow Guo Pei \u201comelette dress\u201d to her Maison Margiela Pope-inspired ensemble  #URL#", "Style advice direct from the stars. #URL#", "Forever and always a style icon #URL#", "What about a wedding on the most romantic day of the year? \u2763 #URL#", "How many of these are on your bucket list? #URL#", "A style guide of how to adopt the biggest trend of the season #URL#", "Billie Eilish just released the theme song for 'No Time To Die' and now we're even more excited about the 25th Jame\u2026 #URL#", "Saturday loving --&gt; #URL#  \u00a9 Helmut Newton Estate #URL#", "A style that has dominated the catwalk in recent seasons #URL#", "You haven't really been to Paris until you've ticked these off #URL#", "Today's to-do list: watch all of Ren\u00e9e's films --&gt; #URL#  \u00a9 Collection Christophel / Gracie Films\u2026 #URL#", "\"Let's keep our Valentine's date a chilled one this year\" Us: \"Sure\" Also us: --&gt; #URL#  \u00a9 Alessa\u2026 #URL#", "Lip pencils at the ready #URL#", "Yolanda Hadid holds the key to eternal youth and endless energy... #URL#", "Miley Cyrus strutting down the runway at Marc Jacobs is all we need to see on a Thursday --&gt;\u2026 #URL#", "Line your lips. It's more fun. --&gt; #URL#  \u00a9 Getty Images #URL#", "From Psycho to To Catch a Thief, Alfred Hitchcock created some iconic films #URL# #URL#", "When a museum looks this beautiful how could we ever leave? --&gt; #URL#  \u00a9 ADRIEN DIRAND / Luc Cast\u2026 #URL#", "Need those last-minute gift ideas? #URL#", "Brave the cold in the most stylish way possible like Diana in this vintage ski suit --&gt; #URL#  \u00a9\u2026 #URL#", "Don't forget that 2020's color of the year is Classic Blue, so we've brought together all the inspiration a fashion\u2026 #URL#", "Over 30.7 million Apple Watches were sold last year. That's over 84k a day! #URL#", "\"No fuss or frills please\" Us: --&gt; #URL#  \u00a9 Startraks / REX / Shutterstock #URL#", "We all remember the iconic Versace jungle dress, but do you remember this iconic vintage fashion moments from J.Lo?\u2026 #URL#", "They will be the coolest parents #URL#", "From hairclips to a bold eyeliner, the beauty looks at New York Fashion Week were nothing short of striking --&gt;\u2026 #URL#", "Cookies from Mamiche are all we need on a Sunday --&gt; #URL# #URL#", "Clearly the key to success is in these recipes #URL#", "Happy Sunday! --&gt; #URL#  \u00a9 RMN-Grand Palais / image RMN-GP #URL#", "Amal Clooney in 4 of her most showstopping red-carpet looks. She is elegance at its finest --&gt;\u2026 #URL#", "Sundays \u00e0 la Birkin and Gainsbourg --&gt; #URL#  \u00a9 Getty Images #URL#", "Hailey Baldwin and Kylie Jenner have both adopted it #URL#", "Michael Kors last night in New York gave us the ultimate coat inspiration for this cold season --&gt;\u2026 #URL#", "Birkin shares her favorite gastronomic treats. #URL#", "Name a more iconic duo. We'll wait. --&gt; #URL#  \u00a9 YUI MOK/Contributor #URL#", "Take a first look at Robert Pattinson in Batman #URL# #URL#", "Did someone say Saturday night? --&gt; #URL#  \u00a9 Getty Images #URL#", "Christian Cowan created the perfect dress to make everyone realize how much of a gift you are, last night at New Yo\u2026 #URL#", "Why not watch a cult classic tonight? --&gt; #URL#  \u00a9 Getty Images / Collection ChristopheL / Netflix #URL#", "Who doesn't love cracking open a warm cookie and watching the chocolate melt everywhere? #URL#", "Including pictures you won't have seen before #URL#", "These couples are in it for the long run \u2764 --&gt; #URL#  \u00a9 Getty Images / Instagram #USER# / Georg\u2026 #URL#", "This season calls for a seriously good coat game --&gt; #URL#  \u00a9 #URL# #URL#", "Perfect for that relaxing Friday feeling #URL#", "Take some style inspiration from an artist who knows her stuff #URL#", "Congratulations to Sophie Turner and Joe Jonas who are expecting their first child! --&gt; #URL#  \u00a9\u2026 #URL#", "Us trying to figure out how quickly that week went like Janet Leigh in Psycho --&gt; #URL#  \u00a9 Getty\u2026 #URL#", "For a Taurus, go for Dior Sauvage #URL#", "It's cold this winter right? #URL#", "Which royal will make an appearance at London Fashion Week? #URL# #URL#", "Billie Eilish just released the theme song for 'No Time To Die' and we've got it on repeat --&gt;\u2026 #URL#", "Take the Parisian food tour with Clara Cornet  #URL# #URL#", "Sunday recipe idea: Kim Kardashian West's vegan tacos --&gt; #URL# #URL#", "Kim's take on the Mexican classic #URL# #URL#", "A simple, well-tailored blazer offers myriad style possibilities. #URL#", "Rebecca Leigh Longendyke and Vittoria Ceretti on the cover of the March 2020 ready-to-wear special. On newsstands F\u2026 #URL#", "Sweet treats for Valentine's Day anyone? --&gt; #URL#  \u00a9 C\u00e9dric Grolet #URL#", "Friday feels --&gt; #URL#  \u00a9 Robert Knight Archive/Redferns #URL#", "Royal love is a beautiful love indeed #URL#", "If you want the fairy tale look, any of these will do #URL#", "We're obsessed with this new type of French tip #URL#", "How to be on-trend 101 #URL#", "Miuccia Prada is successful for a reason #URL#", "It's an all in one! #URL#", "Today's throwback Thursday trend comes in the form of a tracksuit --&gt; #URL#  \u00a9 Instagram\u2026 #URL#", "Karl Lagerfeld's bags for Chanel, the ultimate fun accessory, never failed to impress --&gt; #URL#\u2026 #URL#", "Beauty should flaunt with thorns #URL#", "Love is in the air #URL# #URL#", "From an asymmetrical, Grecian gown to a bustier dress with feather detail. #URL#", "Paint yourself like an icon #URL#", "Happy Valentine's Day from the couple that makes us believe in love!\ud83d\udc96 --&gt; #URL#  \u00a9 Getty Images #URL#", "It's goodbye to the bob for the American actor #URL#", "Throwback Thursday: Yves Saint Laurent showing us that success comes with dedication and hard work --&gt;\u2026 #URL#", "The perfect collection to express your love to your other half (or yourself) #URL#", "Ari Seth Cohen showing us every beautiful kind of love. Happy Valentine's Day. \u2764\ud83d\udc9b\ud83d\udc9a\ud83d\udc99\ud83d\udc9c #URL#", "This jacket has stood the test of time #URL#", "The best sidewalk style --&gt;  #URL#", "Who doesn't love a white wedding? #URL#", "How many can we binge in one night? #URL#", "Spring is just round the corner... #URL# #URL#", "Look's like Miley Cyrus had a Party in the USA #URL#", "Who are you matched with today? #URL#", "From the classic to the futuristic #URL#", "A surefire way to throw some subtle hints... thank you Marc Jacobs.  #URL#", "Meghan and Harry focusing hard --&gt; #URL#  \u00a9 Getty Images #URL#", "The key steps to optimal health and a strong body: \u201cI see the back as the body\u2019s lifeline\u201d - Ang\u00e9lique Dallioux #URL#", "Between the brimming crates of seafood, a delicious bowl of ramen awaits \ud83c\udf5c #URL#", "Are we seeing double? Courteney Cox dressing up as Jennifer Aniston for her birthday is the best thing we've seen a\u2026 #URL#", "You can never beat a simple pasta #URL#", "In the list, the perfect silk shirt #URL#", "Who doesn't want a phone created by a fashion designer? #URL#", "Why not book a table for this weekend? #URL#", "The comfiest trend ever. Discuss #URL#", "Cuteness in 9 matching outfits #URL#", "Capricorns, buckle up - you've got a great year ahead! #URL#"], "ents": [[{"py/tuple": ["New York Fashion Week", "ORG"]}], [{"py/tuple": ["the day", "DATE"]}], [], [], [{"py/tuple": ["Berlin", "GPE"]}], [{"py/tuple": ["Guo Pei", "PERSON"]}, {"py/tuple": ["Maison Margiela", "PERSON"]}], [], [], [{"py/tuple": ["day of the year", "DATE"]}, {"py/tuple": ["\u2763", "ORG"]}], [], [], [{"py/tuple": ["Billie Eilish", "PERSON"]}, {"py/tuple": ["'No Time To Die'", "WORK_OF_ART"]}, {"py/tuple": ["the 25th Jame", "LOC"]}], [{"py/tuple": ["Saturday", "DATE"]}, {"py/tuple": ["Helmut Newton", "PERSON"]}], [{"py/tuple": ["recent seasons", "DATE"]}], [{"py/tuple": ["Paris", "GPE"]}], [{"py/tuple": ["Today", "DATE"]}, {"py/tuple": ["Ren\u00e9e", "PERSON"]}], [{"py/tuple": ["Valentine", "PERSON"]}, {"py/tuple": ["one this year", "DATE"]}, {"py/tuple": ["Alessa", "PERSON"]}], [], [{"py/tuple": ["Yolanda Hadid", "PERSON"]}], [{"py/tuple": ["Miley Cyrus", "PERSON"]}, {"py/tuple": ["Marc Jacobs", "PERSON"]}, {"py/tuple": ["Thursday", "DATE"]}], [{"py/tuple": ["Getty", "PERSON"]}], [{"py/tuple": ["Psycho", "GPE"]}, {"py/tuple": ["Alfred Hitchcock", "PERSON"]}], [], [{"py/tuple": ["last-minute", "TIME"]}], [{"py/tuple": ["Diana", "PERSON"]}], [{"py/tuple": ["2020", "DATE"]}, {"py/tuple": ["the year", "DATE"]}, {"py/tuple": ["Classic Blue", "PRODUCT"]}], [{"py/tuple": ["Over 30.7 million", "CARDINAL"]}, {"py/tuple": ["last year", "DATE"]}], [{"py/tuple": ["Startraks / REX / Shutterstock", "ORG"]}], [{"py/tuple": ["Versace", "ORG"]}], [], [{"py/tuple": ["New York Fashion Week", "ORG"]}], [{"py/tuple": ["Mamiche", "ORG"]}, {"py/tuple": ["Sunday", "DATE"]}], [], [{"py/tuple": ["Sunday", "DATE"]}], [{"py/tuple": ["Amal Clooney", "PERSON"]}, {"py/tuple": ["4", "CARDINAL"]}], [{"py/tuple": ["Sundays", "DATE"]}, {"py/tuple": ["Gainsbourg", "GPE"]}, {"py/tuple": ["Getty", "PERSON"]}], [{"py/tuple": ["Hailey Baldwin", "PERSON"]}, {"py/tuple": ["Kylie Jenner", "PERSON"]}], [{"py/tuple": ["Michael Kors", "PERSON"]}, {"py/tuple": ["last night", "TIME"]}, {"py/tuple": ["New York", "GPE"]}, {"py/tuple": ["this cold season", "DATE"]}], [{"py/tuple": ["Birkin", "PERSON"]}], [], [{"py/tuple": ["first", "ORDINAL"]}, {"py/tuple": ["Robert Pattinson", "PERSON"]}, {"py/tuple": ["Batman", "PERSON"]}], [{"py/tuple": ["Saturday", "DATE"]}, {"py/tuple": ["night", "TIME"]}, {"py/tuple": ["Getty", "PERSON"]}], [{"py/tuple": ["Christian Cowan", "PERSON"]}, {"py/tuple": ["last night", "TIME"]}, {"py/tuple": ["New Yo", "FAC"]}], [{"py/tuple": ["tonight", "TIME"]}], [], [], [], [], [{"py/tuple": ["Friday", "DATE"]}], [], [{"py/tuple": ["Sophie Turner", "PERSON"]}, {"py/tuple": ["Joe Jonas", "PERSON"]}, {"py/tuple": ["first", "ORDINAL"]}], [{"py/tuple": ["that week", "DATE"]}, {"py/tuple": ["Janet Leigh", "PERSON"]}, {"py/tuple": ["Psycho", "GPE"]}, {"py/tuple": ["Getty", "PERSON"]}], [], [{"py/tuple": ["this winter", "DATE"]}], [{"py/tuple": ["London Fashion Week", "ORG"]}], [{"py/tuple": ["Billie Eilish", "PERSON"]}, {"py/tuple": ["'No Time To Die'", "WORK_OF_ART"]}], [{"py/tuple": ["Parisian", "NORP"]}, {"py/tuple": ["Clara Cornet", "PERSON"]}], [{"py/tuple": ["Sunday", "DATE"]}, {"py/tuple": ["Kim Kardashian West's", "PERSON"]}], [{"py/tuple": ["Kim", "PERSON"]}, {"py/tuple": ["Mexican", "NORP"]}], [], [{"py/tuple": ["Rebecca Leigh Longendyke", "PERSON"]}, {"py/tuple": ["Vittoria Ceretti", "PERSON"]}, {"py/tuple": ["March 2020", "DATE"]}], [{"py/tuple": ["Valentine", "PERSON"]}], [{"py/tuple": ["Friday", "DATE"]}], [], [], [{"py/tuple": ["French", "NORP"]}], [{"py/tuple": ["101", "CARDINAL"]}], [{"py/tuple": ["Miuccia Prada", "PERSON"]}], [], [{"py/tuple": ["Today", "DATE"]}, {"py/tuple": ["Thursday", "DATE"]}, {"py/tuple": ["Instagram", "NORP"]}], [{"py/tuple": ["Karl Lagerfeld's", "PERSON"]}, {"py/tuple": ["Chanel", "ORG"]}], [], [], [{"py/tuple": ["Grecian", "NORP"]}], [], [{"py/tuple": ["Happy Valentine's Day", "PERSON"]}, {"py/tuple": ["Getty", "PERSON"]}], [{"py/tuple": ["American", "NORP"]}], [{"py/tuple": ["Thursday", "DATE"]}, {"py/tuple": ["Saint Laurent", "ORG"]}], [{"py/tuple": ["half", "CARDINAL"]}], [{"py/tuple": ["Ari Seth Cohen", "PERSON"]}, {"py/tuple": ["Happy Valentine's Day", "PERSON"]}], [], [], [], [{"py/tuple": ["one night", "TIME"]}], [], [{"py/tuple": ["Miley Cyrus", "PERSON"]}, {"py/tuple": ["Party", "ORG"]}, {"py/tuple": ["USA", "GPE"]}], [{"py/tuple": ["today", "DATE"]}], [], [{"py/tuple": ["Marc Jacobs", "PERSON"]}], [{"py/tuple": ["Meghan", "PERSON"]}, {"py/tuple": ["Harry", "PERSON"]}, {"py/tuple": ["Getty", "PERSON"]}], [], [{"py/tuple": ["\ud83c\udf5c", "ORG"]}], [{"py/tuple": ["Courteney Cox", "PERSON"]}, {"py/tuple": ["Jennifer Aniston", "PERSON"]}], [], [], [], [{"py/tuple": ["this weekend", "DATE"]}], [], [{"py/tuple": ["9", "CARDINAL"]}], [{"py/tuple": ["a great year ahead", "DATE"]}]], "POS_tags": [[{"py/object": "builtins.generator", "py/iterator": ["AUX", "PROPN", "VERB", "DET", "ADJ", "NOUN", "ADP", "PROPN", "PROPN", "PROPN", "PROPN", "PUNCT", "PRON", "AUX", "PART", "VERB", "DET", "NOUN", "NOUN", "PUNCT", "PUNCT", "PUNCT", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["INTJ", "PUNCT", "DET", "AUX", "NOUN", "ADP", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "ADP", "DET", "NOUN", "NOUN", "NOUN", "NOUN", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "SYM", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "VERB", "PRON", "DET", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["PUNCT", "NOUN", "DET", "NOUN", "ADP", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADP", "DET", "ADJ", "PROPN", "PROPN", "PUNCT", "PROPN", "NOUN", "PUNCT", "ADP", "DET", "PROPN", "PROPN", "PROPN", "PUNCT", "VERB", "ADJ", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NOUN", "ADJ", "ADP", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "CCONJ", "ADV", "DET", "NOUN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "ADP", "DET", "NOUN", "ADP", "DET", "ADV", "ADJ", "NOUN", "ADP", "DET", "NOUN", "PUNCT", "PRON"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "ADJ", "ADP", "DET", "AUX", "ADP", "DET", "NOUN", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "NOUN", "ADP", "ADV", "PART", "VERB", "DET", "ADJ", "NOUN", "ADP", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "ADV", "VERB", "DET", "NOUN", "NOUN", "ADP", "PUNCT", "DET", "NOUN", "PART", "VERB", "PUNCT", "CCONJ", "ADV", "PRON", "AUX", "ADV", "ADV", "ADJ", "ADP", "DET", "ADJ", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "DET", "AUX", "VERB", "DET", "NOUN", "ADP", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "AUX", "PART", "ADV", "AUX", "ADP", "PROPN", "ADP", "PRON", "AUX", "VERB", "DET", "ADP"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "PART", "PART", "PUNCT", "AUX", "NOUN", "PUNCT", "VERB", "DET", "ADP", "PROPN", "PART", "NOUN", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "SYM", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PUNCT", "VERB", "PRON", "VERB", "DET", "PROPN", "PART", "NOUN", "DET", "VERB", "NOUN", "DET", "NOUN", "PUNCT", "PRON", "PUNCT", "PUNCT", "INTJ", "PUNCT", "ADV", "PRON", "PUNCT", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "NOUN", "ADP", "DET", "ADJ"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "VERB", "DET", "NOUN", "ADP", "ADJ", "NOUN", "CCONJ", "ADJ", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "VERB", "ADP", "DET", "NOUN", "ADP", "PROPN", "PROPN", "AUX", "DET", "PRON", "VERB", "PART", "VERB", "ADP", "DET", "PROPN", "PUNCT", "PUNCT", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "DET", "NOUN", "PUNCT", "PRON", "AUX", "ADV", "ADJ", "PUNCT", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADP", "PROPN", "ADP", "PART", "VERB", "DET", "NOUN", "PUNCT", "PROPN", "PROPN", "VERB", "DET", "ADJ", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "DET", "NOUN", "VERB", "DET", "ADJ", "ADV", "VERB", "PRON", "ADV", "VERB", "PUNCT", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "SYM", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "DET", "ADJ", "PUNCT", "NOUN", "NOUN", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "DET", "NOUN", "ADP", "DET", "ADV", "ADJ", "NOUN", "ADJ", "SCONJ", "PROPN", "ADP", "DET", "ADJ", "NOUN", "NOUN", "PUNCT", "PUNCT", "SPACE", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["AUX", "PART", "VERB", "SCONJ", "NUM", "PART", "NOUN", "ADP", "DET", "NOUN", "AUX", "PROPN", "PROPN", "PUNCT", "ADV", "PRON", "AUX", "VERB", "ADV", "DET", "DET", "NOUN", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADP", "NUM", "NUM", "PROPN", "PROPN", "AUX", "VERB", "ADJ", "NOUN", "PUNCT", "DET", "AUX", "ADV", "NOUN", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PUNCT", "DET", "NOUN", "CCONJ", "VERB", "INTJ", "PUNCT", "PRON", "PUNCT", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "SYM", "PROPN", "SYM", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "DET", "VERB", "DET", "ADJ", "PROPN", "NOUN", "NOUN", "PUNCT", "CCONJ", "AUX", "PRON", "VERB", "DET", "ADJ", "ADJ", "NOUN", "NOUN", "ADP", "PROPN", "PUNCT", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "VERB", "AUX", "DET", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADP", "NOUN", "ADP", "DET", "ADJ", "NOUN", "PUNCT", "DET", "NOUN", "VERB", "ADP", "PROPN", "PROPN", "PROPN", "PROPN", "AUX", "PRON", "ADJ", "ADP", "VERB", "PUNCT", "PUNCT", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "ADP", "PROPN", "AUX", "DET", "PRON", "VERB", "ADP", "DET", "PROPN", "PROPN", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "DET", "NOUN", "ADP", "NOUN", "AUX", "ADP", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PUNCT", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PUNCT", "PROPN", "PROPN", "PUNCT", "NOUN", "PROPN", "PUNCT", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "ADP", "NUM", "ADP", "PRON", "ADV", "VERB", "ADJ", "PUNCT", "NOUN", "VERB", "PUNCT", "PRON", "AUX", "NOUN", "ADP", "DET", "ADJ", "PUNCT", "PUNCT", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "PROPN", "X", "PROPN", "CCONJ", "PROPN", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "CCONJ", "PROPN", "PROPN", "AUX", "DET", "VERB", "PRON"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "ADJ", "NOUN", "ADP", "PROPN", "PROPN", "VERB", "PRON", "DET", "ADJ", "NOUN", "NOUN", "ADP", "DET", "ADJ", "NOUN", "PUNCT", "PUNCT", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "NOUN", "DET", "ADJ", "ADJ", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "DET", "ADV", "ADJ", "NOUN", "PUNCT", "PRON", "VERB", "VERB", "PUNCT", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "SYM", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "DET", "ADJ", "NOUN", "ADP", "PROPN", "PROPN", "ADP", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["AUX", "PRON", "VERB", "PROPN", "NOUN", "PUNCT", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "VERB", "DET", "ADJ", "NOUN", "PART", "VERB", "PRON", "VERB", "ADV", "ADJ", "ADP", "DET", "NOUN", "PRON", "AUX", "PUNCT", "ADJ", "NOUN", "ADP", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PART", "VERB", "DET", "NOUN", "NOUN", "NOUN", "PUNCT", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "SYM", "PROPN", "NOUN", "SYM", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "AUX", "PART", "VERB", "VERB", "ADP", "DET", "ADJ", "NOUN", "CCONJ", "VERB", "DET", "NOUN", "NOUN", "ADV", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "NOUN", "PRON", "VERB", "PART", "AUX", "VERB", "ADV"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "AUX", "ADP", "PRON", "ADP", "DET", "ADJ", "NOUN", "PROPN", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "SYM", "PROPN", "PROPN", "SYM", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "VERB", "ADP", "DET", "ADV", "ADJ", "NOUN", "NOUN", "PUNCT", "PUNCT", "SPACE", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "ADP", "DET", "VERB", "PROPN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "DET", "NOUN", "NOUN", "ADP", "DET", "NOUN", "PRON", "VERB", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "ADP", "PROPN", "PROPN", "CCONJ", "PROPN", "PROPN", "PRON", "AUX", "VERB", "DET", "ADJ", "NOUN", "PUNCT", "PUNCT", "PUNCT", "SPACE", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "VERB", "PART", "VERB", "ADP", "ADV", "ADV", "DET", "NOUN", "VERB", "SCONJ", "PROPN", "PROPN", "ADP", "PROPN", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADP", "DET", "PROPN", "PUNCT", "VERB", "ADP", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "AUX", "ADJ", "DET", "NOUN", "ADV", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "VERB", "VERB", "DET", "NOUN", "ADP", "PROPN", "PROPN", "PROPN", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "ADV", "VERB", "DET", "NOUN", "NOUN", "ADP", "PUNCT", "DET", "NOUN", "PART", "VERB", "PUNCT", "CCONJ", "PRON", "AUX", "VERB", "PRON", "ADP", "NOUN", "PUNCT", "PUNCT", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "DET", "ADJ", "NOUN", "NOUN", "ADP", "PROPN", "PROPN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "NOUN", "NOUN", "PUNCT", "PROPN", "PROPN", "PROPN", "PART", "NOUN", "NOUN", "PUNCT", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PART", "NOUN", "ADP", "DET", "ADJ", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "PUNCT", "ADV", "PUNCT", "VERB", "NOUN", "VERB", "ADJ", "NOUN", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PROPN", "CCONJ", "PROPN", "PROPN", "ADP", "DET", "NOUN", "ADP", "DET", "PROPN", "NUM", "ADJ", "PUNCT", "PART", "PUNCT", "VERB", "NOUN", "PUNCT", "ADP", "NOUN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "ADP", "PROPN", "PART", "PROPN", "PRON", "PUNCT", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "VERB", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN", "PROPN", "SYM", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "NOUN", "AUX", "DET", "ADJ", "NOUN", "ADV"]}], [{"py/object": "builtins.generator", "py/iterator": ["SCONJ", "PRON", "VERB", "DET", "NOUN", "NOUN", "NOUN", "PUNCT", "DET", "ADP", "DET", "VERB", "AUX"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "AUX", "VERB", "ADP", "DET", "ADJ", "NOUN", "ADP", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PART", "AUX", "ADP", "PUNCT", "NOUN", "NUM"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "AUX", "ADJ", "ADP", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "AUX", "DET", "DET", "ADP", "NUM", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "PART", "NOUN", "PROPN", "NOUN", "VERB", "ADP", "DET", "NOUN", "ADP", "DET", "NOUN", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PART", "NOUN", "ADP", "PROPN", "PUNCT", "DET", "ADJ", "NOUN", "NOUN", "PUNCT", "ADV", "VERB", "PART", "VERB", "PUNCT", "PUNCT", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "VERB", "VERB", "ADP", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "AUX", "ADP", "DET", "NOUN", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADP", "DET", "ADJ", "PUNCT", "ADJ", "NOUN", "ADP", "DET", "NOUN", "NOUN", "ADP", "ADJ", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "PRON", "SCONJ", "DET", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PART", "PROPN", "ADP", "DET", "NOUN", "DET", "VERB", "PRON", "VERB", "ADP", "NOUN", "PUNCT", "PROPN", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "AUX", "NOUN", "ADP", "DET", "PROPN", "ADP", "DET", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADJ", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "VERB", "PRON", "SCONJ", "NOUN", "VERB", "ADP", "NOUN", "CCONJ", "ADJ", "NOUN", "PUNCT", "PUNCT", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "NOUN", "PART", "VERB", "DET", "NOUN", "ADP", "DET", "ADJ", "NOUN", "PUNCT", "CCONJ", "PRON", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "PROPN", "PROPN", "VERB", "PRON", "DET", "ADJ", "NOUN", "ADP", "NOUN", "PUNCT", "PROPN", "PROPN", "PART", "PROPN", "PUNCT", "PROPN", "PROPN", "PROPN", "X", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "AUX", "VERB", "DET", "NOUN", "ADP", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "NOUN", "NOUN", "PUNCT", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "AUX", "PART", "VERB", "DET", "ADJ", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "ADJ", "VERB", "PRON", "VERB", "ADP", "NUM", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "AUX", "ADV", "ADV", "DET", "NOUN", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["VERB", "PART", "SCONJ", "PROPN", "PROPN", "AUX", "DET", "PROPN", "ADP", "DET", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "AUX", "PRON", "VERB", "ADP", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADP", "DET", "NOUN", "ADP", "DET", "ADJ"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "NOUN", "NOUN", "PART", "VERB", "DET", "ADJ", "NOUN", "PUNCT", "VERB", "PRON", "PROPN", "PROPN", "PUNCT", "SPACE"]}], [{"py/object": "builtins.generator", "py/iterator": ["PROPN", "CCONJ", "PROPN", "VERB", "ADV", "PUNCT", "PUNCT", "SPACE", "PROPN", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "NOUN", "ADP", "ADJ", "NOUN", "CCONJ", "DET", "ADJ", "NOUN", "PUNCT", "PUNCT", "PRON", "VERB", "DET", "NOUN", "SCONJ", "DET", "NOUN", "PART", "NOUN", "PUNCT", "PUNCT", "PROPN", "PROPN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADP", "DET", "VERB", "NOUN", "ADP", "NOUN", "PUNCT", "DET", "ADJ", "NOUN", "ADP", "NOUN", "VERB", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["AUX", "PRON", "VERB", "ADJ", "PUNCT", "PROPN", "PROPN", "VERB", "ADP", "SCONJ", "PROPN", "PROPN", "ADP", "DET", "NOUN", "AUX", "DET", "ADJ", "NOUN", "PRON", "AUX", "VERB", "DET", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "VERB", "ADV", "VERB", "DET", "ADJ", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADP", "DET", "NOUN", "PUNCT", "DET", "ADJ", "NOUN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["PRON", "AUX", "PART", "VERB", "DET", "NOUN", "VERB", "ADP", "DET", "NOUN", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["ADV", "PART", "VERB", "DET", "NOUN", "ADP", "DET", "NOUN", "PUNCT"]}], [{"py/object": "builtins.generator", "py/iterator": ["DET", "ADJ", "NOUN", "ADV", "PUNCT", "VERB"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "ADP", "NUM", "NOUN", "NOUN"]}], [{"py/object": "builtins.generator", "py/iterator": ["NOUN", "PUNCT", "VERB", "ADP", "PUNCT", "PRON", "AUX", "VERB", "DET", "ADJ", "NOUN", "ADV", "PUNCT"]}]], "clean": ["have area create the cool accessory of new york fashion week who do need a chair necklace", "well this be news of the day", "the answer to -pron- leather jacket styling question getty images sandra semburg", "-pron- amaze -pron- every time", "book a ticket to berlin", "from -pron- yellow guo pei omelette dress to -pron- maison margiela pope inspire ensemble", "style advice direct from the star", "forever and always a style icon", "what about a wedding on the most romantic day of the year", "how many of these be on -pron- bucket list", "a style guide of how to adopt the big trend of the season", "billie eilish just release the theme song for no time to die and now -pron- even more excited about the jame", "saturday love helmut newton estate", "a style that have dominate the catwalk in recent season", "-pron- have really be to paris until -pron- tick these off", "today to do list watch all of ren\u00e9e film collection christophel gracie films", "let keep -pron- valentine date a chill one this year -pron- sure also -pron- alessa", "lip pencil at the ready", "yolanda hadid hold the key to eternal youth and endless energy", "miley cyrus strut down the runway at marc jacobs be all -pron- need to see on a thursday", "line -pron- lip -pron- more fun getty images", "from psycho to to catch a thief alfred hitchcock create some iconic film", "when a museum look this beautiful how could -pron- ever leave adrien dirand luc cast", "need those last minute gift idea", "brave the cold in the most stylish way possible like diana in this vintage ski suit", "do forget that color of the year be classic blue so -pron- bring together all the inspiration a fashion", "over million apple watches be sell last year that over a day", "no fuss or frill please -pron- startraks rex shutterstock", "-pron- all remember the iconic versace jungle dress but do -pron- remember this iconic vintage fashion moment from", "-pron- will be the cool parent", "from hairclip to a bold eyeliner the beauty look at new york fashion week be nothing short of strike", "cookie from mamiche be all -pron- need on a sunday", "clearly the key to success be in these recipe", "happy sunday rmn grand palais image rmn gp", "amal clooney in of -pron- most showstoppe red carpet look -pron- be elegance at -pron- fine", "sunday \u00e0 la birkin and gainsbourg getty images", "hailey baldwin and kylie jenner have both adopt -pron-", "michael kors last night in new york give -pron- the ultimate coat inspiration for this cold season", "birkin share -pron- favorite gastronomic treat", "name a more iconic duo -pron- wait yui mok contributor", "take a first look at robert pattinson in batman", "do someone say saturday night getty images", "christian cowan create the perfect dress to make everyone realize how much of a gift -pron- be last night at new yo", "why not watch a cult classic tonight getty images collection christophel netflix", "who do love crack open a warm cookie and watch the chocolate melt everywhere", "include picture -pron- will have see before", "these couple be in -pron- for the long run getty images instagram user georg", "this season call for a seriously good coat game", "perfect for that relax friday feeling", "take some style inspiration from an artist who know -pron- stuff", "congratulation to sophie turner and joe jonas who be expect -pron- first child", "-pron- try to figure out how quickly that week go like janet leigh in psycho getty", "for a taurus go for dior sauvage", "-pron- cold this winter right", "which royal will make an appearance at london fashion week", "billie eilish just release the theme song for no time to die and -pron- get -pron- on repeat", "take the parisian food tour with clara cornet", "sunday recipe idea kim kardashian west vegan taco", "kim take on the mexican classic", "a simple well tailor blazer offer myriad style possibility", "rebecca leigh longendyke and vittoria ceretti on the cover of the march ready to wear special on newsstand f", "sweet treat for valentine day anyone c\u00e9dric grolet", "friday feel robert knight archive redferns", "royal love be a beautiful love indeed", "if -pron- want the fairy tale look any of these will do", "-pron- obsess with this new type of french tip", "how to be on trend", "miuccia prada be successful for a reason", "-pron- an all in one", "today throwback thursday trend come in the form of a tracksuit instagram", "karl lagerfeld bag for chanel the ultimate fun accessory never fail to impress", "beauty should flaunt with thorn", "love be in the air", "from an asymmetrical grecian gown to a bustier dress with feather detail", "paint -pron- like an icon", "happy valentine day from the couple that make -pron- believe in love getty images", "-pron- goodbye to the bob for the american actor", "throwback thursday yves saint laurent show -pron- that success come with dedication and hard work", "the perfect collection to express -pron- love to -pron- other half or -pron-", "ari seth cohen show -pron- every beautiful kind of love happy valentine day", "this jacket have stand the test of time", "the good sidewalk style", "who do love a white wedding", "how many can -pron- binge in one night", "spring be just round the corner", "look like miley cyrus have a party in the usa", "who be -pron- match with today", "from the classic to the futuristic", "a surefire way to throw some subtle hint thank -pron- marc jacobs", "meghan and harry focus hard getty images", "the key step to optimal health and a strong body -pron- see the back as the body lifeline ang\u00e9lique dallioux", "between the brim crate of seafood a delicious bowl of raman await", "be -pron- see double courteney cox dress up as jennifer aniston for -pron- birthday be the good thing -pron- see a", "-pron- can never beat a simple pasta", "in the list the perfect silk shirt", "who do want a phone create by a fashion designer", "why not book a table for this weekend", "the comfy trend ever discuss", "cuteness in matching outfit", "capricorn buckle up -pron- get a great year ahead"]}